<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classtrio_1_1MemoryMappedFileStream" kind="class" language="C++" prot="public">
    <compoundname>trio::MemoryMappedFileStream</compoundname>
    <basecompoundref refid="classtrio_1_1BoundedIOStream" prot="public" virt="non-virtual">trio::BoundedIOStream</basecompoundref>
    <basecompoundref refid="classtrio_1_1Buffered" prot="public" virt="non-virtual">trio::Buffered</basecompoundref>
    <basecompoundref refid="classtrio_1_1Resizable" prot="public" virt="non-virtual">trio::Resizable</basecompoundref>
    <derivedcompoundref refid="classtrio_1_1MemoryMappedFileStreamFallback" prot="public" virt="non-virtual">trio::MemoryMappedFileStreamFallback</derivedcompoundref>
    <includes refid="MemoryMappedFileStream_8h" local="no">MemoryMappedFileStream.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1a2177421351de24c977301226f68805d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> *</type>
        <definition>MemoryMappedFileStream * trio::MemoryMappedFileStream::create</definition>
        <argsstring>(const char *path, AccessMode accessMode, MemoryResource *memRes=nullptr)</argsstring>
        <name>create</name>
        <qualifiedname>trio::MemoryMappedFileStream::create</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116" kindref="member">AccessMode</ref></type>
          <declname>accessMode</declname>
        </param>
        <param>
          <type><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref> *</type>
          <declname>memRes</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Factory method for creation of a <ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>UTF-8 encoded path to file to be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accessMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Control whether the file is opened for reading or writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memRes</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory resource to be used for the allocation of the <ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If a custom memory resource is not given, a default allocation mechanism will be used. </para>
</simplesect>
<simplesect kind="warning"><para>User is responsible for releasing the returned pointer by calling destroy. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classtrio_1_1MemoryMappedFileStream_1a971ca04a6298a2a617b13cc10a074d15" kindref="member">destroy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="31" column="39" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/trio/streams/MemoryMappedFileStream.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1a971ca04a6298a2a617b13cc10a074d15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trio::MemoryMappedFileStream::destroy</definition>
        <argsstring>(MemoryMappedFileStream *instance)</argsstring>
        <name>destroy</name>
        <qualifiedname>trio::MemoryMappedFileStream::destroy</qualifiedname>
        <param>
          <type><ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Method for freeing a <ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance of <ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classtrio_1_1MemoryMappedFileStream_1a2177421351de24c977301226f68805d6" kindref="member">create</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="38" column="21" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/trio/streams/MemoryMappedFileStream.cpp" bodystart="26" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1ab9b384fc694c08d305e106cae21b00e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>trio::MemoryMappedFileStream::MemoryMappedFileStream</definition>
        <argsstring>()=default</argsstring>
        <name>MemoryMappedFileStream</name>
        <qualifiedname>trio::MemoryMappedFileStream::MemoryMappedFileStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1a7ef4185f6052e5a08372bee59eaf2719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>trio::MemoryMappedFileStream::~MemoryMappedFileStream</definition>
        <argsstring>() override</argsstring>
        <name>~MemoryMappedFileStream</name>
        <qualifiedname>trio::MemoryMappedFileStream::~MemoryMappedFileStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1ac26af24769f89eefb27951c439ee38fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>trio::MemoryMappedFileStream::MemoryMappedFileStream</definition>
        <argsstring>(const MemoryMappedFileStream &amp;)=delete</argsstring>
        <name>MemoryMappedFileStream</name>
        <qualifiedname>trio::MemoryMappedFileStream::MemoryMappedFileStream</qualifiedname>
        <param>
          <type>const <ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1aadffb508236a096af7f5ebf26012f4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> &amp;</type>
        <definition>MemoryMappedFileStream &amp; trio::MemoryMappedFileStream::operator=</definition>
        <argsstring>(const MemoryMappedFileStream &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>trio::MemoryMappedFileStream::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="44" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1a6727e9ac0010549107205be97eb444f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>trio::MemoryMappedFileStream::MemoryMappedFileStream</definition>
        <argsstring>(MemoryMappedFileStream &amp;&amp;)=default</argsstring>
        <name>MemoryMappedFileStream</name>
        <qualifiedname>trio::MemoryMappedFileStream::MemoryMappedFileStream</qualifiedname>
        <param>
          <type><ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtrio_1_1MemoryMappedFileStream_1a5ba613d9fe056b73425dfef7b2bf7544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> &amp;</type>
        <definition>MemoryMappedFileStream &amp; trio::MemoryMappedFileStream::operator=</definition>
        <argsstring>(MemoryMappedFileStream &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>trio::MemoryMappedFileStream::operator=</qualifiedname>
        <param>
          <type><ref refid="classtrio_1_1MemoryMappedFileStream" kindref="compound">MemoryMappedFileStream</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="47" column="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory mapped file stream. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>trio::Bounded</label>
        <link refid="classtrio_1_1Bounded"/>
      </node>
      <node id="2">
        <label>trio::BoundedIOStream</label>
        <link refid="classtrio_1_1BoundedIOStream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>trio::Buffered</label>
        <link refid="classtrio_1_1Buffered"/>
      </node>
      <node id="5">
        <label>trio::Closeable</label>
        <link refid="classtrio_1_1Closeable"/>
      </node>
      <node id="3">
        <label>trio::Controllable</label>
        <link refid="classtrio_1_1Controllable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>trio::MemoryMappedFileStream</label>
        <link refid="classtrio_1_1MemoryMappedFileStream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>trio::MemoryMappedFileStreamFallback</label>
        <link refid="classtrio_1_1MemoryMappedFileStreamFallback"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>trio::Openable</label>
        <link refid="classtrio_1_1Openable"/>
      </node>
      <node id="6">
        <label>trio::Readable</label>
        <link refid="classtrio_1_1Readable"/>
      </node>
      <node id="11">
        <label>trio::Resizable</label>
        <link refid="classtrio_1_1Resizable"/>
      </node>
      <node id="8">
        <label>trio::Seekable</label>
        <link refid="classtrio_1_1Seekable"/>
      </node>
      <node id="7">
        <label>trio::Writable</label>
        <link refid="classtrio_1_1Writable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>sc::StatusCode</label>
        <link refid="structsc_1_1StatusCode"/>
      </node>
      <node id="9">
        <label>trio::Bounded</label>
        <link refid="classtrio_1_1Bounded"/>
      </node>
      <node id="2">
        <label>trio::BoundedIOStream</label>
        <link refid="classtrio_1_1BoundedIOStream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+AlreadyOpenError</edgelabel>
          <edgelabel>+OpenError</edgelabel>
          <edgelabel>+ReadError</edgelabel>
          <edgelabel>+SeekError</edgelabel>
          <edgelabel>+WriteError</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>trio::Buffered</label>
        <link refid="classtrio_1_1Buffered"/>
      </node>
      <node id="5">
        <label>trio::Closeable</label>
        <link refid="classtrio_1_1Closeable"/>
      </node>
      <node id="3">
        <label>trio::Controllable</label>
        <link refid="classtrio_1_1Controllable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>trio::MemoryMappedFileStream</label>
        <link refid="classtrio_1_1MemoryMappedFileStream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>trio::Openable</label>
        <link refid="classtrio_1_1Openable"/>
      </node>
      <node id="6">
        <label>trio::Readable</label>
        <link refid="classtrio_1_1Readable"/>
      </node>
      <node id="12">
        <label>trio::Resizable</label>
        <link refid="classtrio_1_1Resizable"/>
      </node>
      <node id="8">
        <label>trio::Seekable</label>
        <link refid="classtrio_1_1Seekable"/>
      </node>
      <node id="7">
        <label>trio::Writable</label>
        <link refid="classtrio_1_1Writable"/>
      </node>
    </collaborationgraph>
    <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" line="15" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/trio/streams/MemoryMappedFileStream.h" bodystart="15" bodyend="49"/>
    <listofallmembers>
      <member refid="classtrio_1_1BoundedIOStream_1ab68bb604ec68fe3571cd81789039d93f" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>AccessMode</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1a20f4c9068fa8d05f6f6135c367fe4d24" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>AlreadyOpenError</name></member>
      <member refid="classtrio_1_1Closeable_1ac2e99d3bd99a39cf528ba29b1ba0baf1" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>close</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1a2177421351de24c977301226f68805d6" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>create</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1a971ca04a6298a2a617b13cc10a074d15" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>destroy</name></member>
      <member refid="classtrio_1_1Buffered_1a26d3651eaa3506ec501bde9791c3a0ba" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>flush</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1ab9b384fc694c08d305e106cae21b00e0" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>MemoryMappedFileStream</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1ac26af24769f89eefb27951c439ee38fb" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>MemoryMappedFileStream</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1a6727e9ac0010549107205be97eb444f4" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>MemoryMappedFileStream</name></member>
      <member refid="classtrio_1_1Openable_1addfdc5360983a446fe200410a3eaef8f" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>open</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1a0298a701e6508d21a06a7a12beea4ba2" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>OpenError</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1ac7def2dc131ce92fade579b73695c972" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>OpenMode</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1aadffb508236a096af7f5ebf26012f4ee" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>operator=</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1a5ba613d9fe056b73425dfef7b2bf7544" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>operator=</name></member>
      <member refid="classtrio_1_1Readable_1a134ad61b17c812f7aa2d912fc96d36f9" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>read</name></member>
      <member refid="classtrio_1_1Readable_1ae7272a2547bb33c20c9b37493491c6c1" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>read</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1a5bca141b1213e5f752a4fde5679708bd" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>ReadError</name></member>
      <member refid="classtrio_1_1Resizable_1aea247c331cf9ef72ec2106e9d4ed9b82" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>resize</name></member>
      <member refid="classtrio_1_1Seekable_1aea11c922f49ddf61a0f30f7ad41dde2c" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>seek</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1afbe507ff2b39fc2ccb8550dfc27e0ce9" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>SeekError</name></member>
      <member refid="classtrio_1_1Bounded_1af35254c3e5f016117885d7234c80d9a7" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>size</name></member>
      <member refid="classtrio_1_1Seekable_1af5071bbc6e4760fdfb3d5c0d83117b85" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>tell</name></member>
      <member refid="classtrio_1_1Writable_1a463e8d3e652fc4c3ce971d3fc2eaec7e" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>write</name></member>
      <member refid="classtrio_1_1Writable_1a7c23fed723a8afefd8ecfd78a48d18dc" prot="public" virt="pure-virtual"><scope>trio::MemoryMappedFileStream</scope><name>write</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1adaa88ae7c4bbeda319710963adc81ce8" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>WriteError</name></member>
      <member refid="classtrio_1_1Bounded_1a7ea3df0afdd14896c30ae7502dffe2ff" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Bounded</name></member>
      <member refid="classtrio_1_1BoundedIOStream_1a68637af962300a39b1048d53d50d1f7c" prot="public" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~BoundedIOStream</name></member>
      <member refid="classtrio_1_1Buffered_1adae746465565964b7913092d69efef18" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Buffered</name></member>
      <member refid="classtrio_1_1Closeable_1aebe07ebcbb431ecdd71b575993038097" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Closeable</name></member>
      <member refid="classtrio_1_1Controllable_1a66a85a74eb5921ba18e7d50f16bb3d14" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Controllable</name></member>
      <member refid="classtrio_1_1MemoryMappedFileStream_1a7ef4185f6052e5a08372bee59eaf2719" prot="public" virt="non-virtual"><scope>trio::MemoryMappedFileStream</scope><name>~MemoryMappedFileStream</name></member>
      <member refid="classtrio_1_1Openable_1a24782209f544f766b4b953dae7b1dbd4" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Openable</name></member>
      <member refid="classtrio_1_1Readable_1a49421a76a150a17207dc2d896d73d7a7" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Readable</name></member>
      <member refid="classtrio_1_1Resizable_1a0cbaa6311af47c7ceab33785b6280341" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Resizable</name></member>
      <member refid="classtrio_1_1Seekable_1abbd824465ebc3080b3c1d84f3266bb2d" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Seekable</name></member>
      <member refid="classtrio_1_1Writable_1aadd7ce033795eb76f383ae341a17aa21" prot="protected" virt="virtual"><scope>trio::MemoryMappedFileStream</scope><name>~Writable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
