<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ArenaMemoryResource_8cpp" kind="file" language="C++">
    <compoundname>ArenaMemoryResource.cpp</compoundname>
    <includes refid="ArenaMemoryResource_8h" local="yes">pma/resources/ArenaMemoryResource.h</includes>
    <includes refid="ScopedPtr_8h" local="yes">pma/ScopedPtr.h</includes>
    <includes refid="include_2pma_2TypeDefs_8h" local="yes">pma/TypeDefs.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <incdepgraph>
      <node id="3">
        <label>pma/Defs.h</label>
        <link refid="pma_2Defs_8h"/>
      </node>
      <node id="4">
        <label>pma/MemoryResource.h</label>
        <link refid="MemoryResource_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pma/PolyAllocator.h</label>
        <link refid="PolyAllocator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pma/ScopedPtr.h</label>
        <link refid="ScopedPtr_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pma/TypeDefs.h</label>
        <link refid="include_2pma_2TypeDefs_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pma/resources/ArenaMemoryResource.h</label>
        <link refid="ArenaMemoryResource_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pma/resources/DefaultMemoryResource.h</label>
        <link refid="DefaultMemoryResource_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ArenaMemoryResource.cpp</label>
        <link refid="ArenaMemoryResource_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cassert</label>
      </node>
      <node id="22">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="23">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>list</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="13">
        <label>scoped_allocator</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="14">
        <label>type_traits</label>
      </node>
      <node id="19">
        <label>unordered_map</label>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classpma_1_1ArenaMemoryResource_1_1Impl" prot="public">pma::ArenaMemoryResource::Impl</innerclass>
    <innerclass refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena" prot="private">pma::ArenaMemoryResource::Impl::Arena</innerclass>
    <innernamespace refid="namespacepma">pma</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArenaMemoryResource_8h" kindref="compound">pma/resources/ArenaMemoryResource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ScopedPtr_8h" kindref="compound">pma/ScopedPtr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2pma_2TypeDefs_8h" kindref="compound">pma/TypeDefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepma" kindref="compound">pma</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespacepma_1a08f1bb4c76dacceca5d131ea988130c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::uintptr_t<sp/><ref refid="namespacepma_1a08f1bb4c76dacceca5d131ea988130c6" kindref="member">alignAddress</ref>(std::uintptr_t<sp/>address,<sp/>std::size_t<sp/>alignment)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>mask<sp/>=<sp/>alignment<sp/>-<sp/>1ul;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((alignment<sp/>&amp;<sp/>mask)<sp/>==<sp/>0ul);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(address<sp/>+<sp/>mask)<sp/>&amp;<sp/>~mask;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="namespacepma_1ae9f76d74a60814f55c77aff5c80c56e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="namespacepma_1ae9f76d74a60814f55c77aff5c80c56e1" kindref="member">alignPointer</ref>(T*<sp/>ptr,<sp/>std::size_t<sp/>alignment)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uintptr_t<sp/>address<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::uintptr_t<sp/>aligned<sp/>=<sp/><ref refid="namespacepma_1a08f1bb4c76dacceca5d131ea988130c6" kindref="member">alignAddress</ref>(address,<sp/>alignment);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(aligned);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classpma_1_1ArenaMemoryResource_1_1Impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">ArenaMemoryResource::Impl</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ad8aeafdce3269be87fd82d76c3522622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ad8aeafdce3269be87fd82d76c3522622" kindref="member">create</ref>(std::size_t<sp/>initialSize_,<sp/>std::size_t<sp/>regionSize_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>growthFactor_,<sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>upstream_)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;Impl&gt;</ref><sp/>alloc{upstream_};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alloc.newObject(initialSize_,<sp/>regionSize_,<sp/>growthFactor_,<sp/>upstream_);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a434ac5ceb61411b4691e491f738376c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a434ac5ceb61411b4691e491f738376c1" kindref="member">destroy</ref>(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>*<sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;Impl&gt;</ref><sp/>alloc{instance-&gt;<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc.deleteObject(instance);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a408b54ed587b2a986391bd126d9654e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a408b54ed587b2a986391bd126d9654e4" kindref="member">Impl</ref>(std::size_t<sp/>initialSize_,<sp/>std::size_t<sp/>regionSize_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>growthFactor_,<sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>upstream_)<sp/>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>{upstream_},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ad6254073097dab2c74ae4365c6c46e75" kindref="member">regionSize</ref>{regionSize_},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1af4e164805765592d4a94d79aa38b5688" kindref="member">growthFactor</ref>{growthFactor_},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>{upstream_},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>{nullptr}<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ab4d14f8032d9dd70d1016a46657cea46" kindref="member">allocateArena</ref>(initialSize_);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a5e9f215e3e6f4a796cd2440dcd80114b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a5e9f215e3e6f4a796cd2440dcd80114b" kindref="member">~Impl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.rbegin();<sp/>it<sp/>!=<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.rend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>-&gt;<ref refid="classpma_1_1MemoryResource_1ae775e6f871764336db8dc4d95ba95b2b" kindref="member">deallocate</ref>(it-&gt;memory,<sp/>it-&gt;size,<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(std::max_align_t));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.clear();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a8e6209e70da997f2579284b5e01bf9c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a8e6209e70da997f2579284b5e01bf9c8" kindref="member">Impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a4376426da96f20d4dbfab816cd25a0cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>&amp;<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a4376426da96f20d4dbfab816cd25a0cc" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a12e9196513bef17c067e54af6046e72a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a12e9196513bef17c067e54af6046e72a" kindref="member">Impl</ref>(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac364352c34b6379bae46904f99d25a9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>&amp;<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac364352c34b6379bae46904f99d25a9c" kindref="member">operator=</ref>(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a674f4a229d1acc0aec8dc5d95a98e1ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a674f4a229d1acc0aec8dc5d95a98e1ec" kindref="member">allocate</ref>(std::size_t<sp/>size,<sp/>std::size_t<sp/>alignment)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pAligned<sp/>=<sp/><ref refid="namespacepma_1ae9f76d74a60814f55c77aff5c80c56e1" kindref="member">alignPointer</ref>(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>,<sp/>alignment);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>old(current)<sp/>pointer<sp/>equals<sp/>the<sp/>aligned<sp/>pointer,<sp/>it<sp/>was<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adhering<sp/>to<sp/>the<sp/>given<sp/>alignment<sp/>requirement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alignmentCorrection<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pAligned)<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>neededSize<sp/>=<sp/>size<sp/>+<sp/>alignmentCorrection;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>arena<sp/>has<sp/>enough<sp/>free<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.empty());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>currentArena<sp/>=<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.back();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>)<sp/>+<sp/>neededSize)<sp/>&gt;<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(currentArena.memory)<sp/>+<sp/>currentArena.size))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>enough<sp/>space<sp/>in<sp/>current<sp/>arena,<sp/>allocate<sp/>an<sp/>additional<sp/>one<sp/>(honoring<sp/>growth<sp/>factor),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unless<sp/>this<sp/>is<sp/>the<sp/>first<sp/>additional<sp/>region<sp/>that&apos;s<sp/>needed,<sp/>in<sp/>which<sp/>case<sp/>it&apos;s<sp/>size<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>exactly<sp/>`regionSize`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirstAdditional<sp/>=<sp/>(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.size()<sp/>==<sp/>1ul);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>newArenaSize<sp/>=</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(isFirstAdditional<sp/>?<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ad6254073097dab2c74ae4365c6c46e75" kindref="member">regionSize</ref><sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::lroundf(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(currentArena.size)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1af4e164805765592d4a94d79aa38b5688" kindref="member">growthFactor</ref>)));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ab4d14f8032d9dd70d1016a46657cea46" kindref="member">allocateArena</ref>(newArenaSize);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retry<sp/>allocation<sp/>relying<sp/>on<sp/>newly<sp/>allocated<sp/>arena</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a674f4a229d1acc0aec8dc5d95a98e1ec" kindref="member">allocate</ref>(size,<sp/>alignment);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>)<sp/>+<sp/>neededSize);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pAligned;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a88e86aa0cfac393b9372528fc77e0c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a88e86aa0cfac393b9372528fc77e0c25" kindref="member">getUpstreamMemoryResource</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ab4d14f8032d9dd70d1016a46657cea46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ab4d14f8032d9dd70d1016a46657cea46" kindref="member">allocateArena</ref>(std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.empty()<sp/>&amp;&amp;<sp/>(<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.back().memory<sp/>==<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>allocation<sp/>happened<sp/>in<sp/>the<sp/>arena<sp/>whatsoever,<sp/>and<sp/>the<sp/>first<sp/>allocation<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>immediately<sp/>larger<sp/>than<sp/>the<sp/>arena&apos;s<sp/>size,<sp/>thus<sp/>it&apos;s<sp/>an<sp/>unused<sp/>arena,<sp/>and<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>discarded<sp/>immediately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unusedArena<sp/>=<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.back();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.pop_back();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>-&gt;<ref refid="classpma_1_1MemoryResource_1ae775e6f871764336db8dc4d95ba95b2b" kindref="member">deallocate</ref>(unusedArena.memory,<sp/>unusedArena.size,<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(std::max_align_t));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.push_back({<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>-&gt;<ref refid="classpma_1_1MemoryResource_1ad43f9c740450042025424135a15497bc" kindref="member">allocate</ref>(size,<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(std::max_align_t)),<sp/>size});</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref><sp/>=<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>.back().memory;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109" refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena" kindref="compound">Arena</ref><sp/>{</highlight></codeline>
<codeline lineno="110" refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena_1aada534d7a8b6d2a6cf9aaef5ce143059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena_1aada534d7a8b6d2a6cf9aaef5ce143059" kindref="member">memory</ref>;</highlight></codeline>
<codeline lineno="111" refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena_1acc36d6331d1a136d414804ae98d0cee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structpma_1_1ArenaMemoryResource_1_1Impl_1_1Arena_1acc36d6331d1a136d414804ae98d0cee4" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepma_1a2b7ddbf324d74a36627c64f16b066d53" kindref="member">pma::List&lt;Arena&gt;</ref><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a07a3f3366b3a7c194b2f245abf6c6f39" kindref="member">arenas</ref>;</highlight></codeline>
<codeline lineno="115" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ad6254073097dab2c74ae4365c6c46e75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ad6254073097dab2c74ae4365c6c46e75" kindref="member">regionSize</ref>;</highlight></codeline>
<codeline lineno="116" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1af4e164805765592d4a94d79aa38b5688" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1af4e164805765592d4a94d79aa38b5688" kindref="member">growthFactor</ref>;</highlight></codeline>
<codeline lineno="117" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1a512e153830a206a06b7e7a1180366890" kindref="member">upstream</ref>;</highlight></codeline>
<codeline lineno="118" refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1_1Impl_1ac7244eda5864e2f023f14a78724d1d07" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classpma_1_1ArenaMemoryResource_1abc607be8d16966da05e83fe687444a3c" refkind="member"><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource_1abc607be8d16966da05e83fe687444a3c" kindref="member">ArenaMemoryResource::ArenaMemoryResource</ref>(std::size_t<sp/>initialSize,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>regionSize,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>growthFactor,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>upstream)<sp/>:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>pImpl{<ref refid="namespacepma_1a64805040921b916b618da85c7b1b52b6" kindref="member">makeScoped</ref>&lt;<ref refid="classpma_1_1ArenaMemoryResource_1_1Impl" kindref="compound">Impl</ref>,<sp/><ref refid="structpma_1_1FactoryCreate" kindref="compound">FactoryCreate</ref>,<sp/><ref refid="structpma_1_1FactoryDestroy" kindref="compound">FactoryDestroy</ref>&gt;(initialSize,<sp/>regionSize,<sp/>growthFactor,<sp/>upstream)}<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classpma_1_1ArenaMemoryResource_1a8e1304547bec00e123f0892d40e72312" refkind="member"><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource_1abc607be8d16966da05e83fe687444a3c" kindref="member">ArenaMemoryResource::ArenaMemoryResource</ref>(std::size_t<sp/>regionSize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>growthFactor,<sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>upstream)<sp/>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource" kindref="compound">ArenaMemoryResource</ref>{regionSize,<sp/>regionSize,<sp/>growthFactor,<sp/>upstream}<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classpma_1_1ArenaMemoryResource_1a20b70c4a605f0c4b2e26786b1e367982" refkind="member"><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource_1abc607be8d16966da05e83fe687444a3c" kindref="member">ArenaMemoryResource::ArenaMemoryResource</ref>(std::size_t<sp/>regionSize,<sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>upstream)<sp/>:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpma_1_1ArenaMemoryResource" kindref="compound">ArenaMemoryResource</ref>{regionSize,<sp/>regionSize,<sp/>1.0f,<sp/>upstream}<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource_1a3a79b567cf0e0d05908e9dab3470b059" kindref="member">ArenaMemoryResource::~ArenaMemoryResource</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource_1abc607be8d16966da05e83fe687444a3c" kindref="member">ArenaMemoryResource::ArenaMemoryResource</ref>(<ref refid="classpma_1_1ArenaMemoryResource" kindref="compound">ArenaMemoryResource</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="classpma_1_1ArenaMemoryResource" kindref="compound">ArenaMemoryResource</ref>&amp;<sp/><ref refid="classpma_1_1ArenaMemoryResource_1a9dfd32e6040802fb26422cb68af29bb8" kindref="member">ArenaMemoryResource::operator=</ref>(<ref refid="classpma_1_1ArenaMemoryResource" kindref="compound">ArenaMemoryResource</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classpma_1_1ArenaMemoryResource_1aef2cb6cd6b6bb1f53787976e2503a271" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1aef2cb6cd6b6bb1f53787976e2503a271" kindref="member">ArenaMemoryResource::allocate</ref>(std::size_t<sp/>size,<sp/>std::size_t<sp/>alignment)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1af5f1e7154cf6d5a0963f4d0af9213916" kindref="member">pImpl</ref>-&gt;allocate(size,<sp/>alignment);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classpma_1_1ArenaMemoryResource_1ad8f3c6e40a851df95b8ccee6d4e02022" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1ad8f3c6e40a851df95b8ccee6d4e02022" kindref="member">ArenaMemoryResource::deallocate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">,<sp/>std::size_t<sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">,<sp/>std::size_t<sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classpma_1_1ArenaMemoryResource_1a3932222b28da74089edd8a6243efdb16" refkind="member"><highlight class="normal"><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/><ref refid="classpma_1_1ArenaMemoryResource_1a3932222b28da74089edd8a6243efdb16" kindref="member">ArenaMemoryResource::getUpstreamMemoryResource</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1ArenaMemoryResource_1af5f1e7154cf6d5a0963f4d0af9213916" kindref="member">pImpl</ref>-&gt;getUpstreamMemoryResource();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pma</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/pma/resources/ArenaMemoryResource.cpp"/>
  </compounddef>
</doxygen>
