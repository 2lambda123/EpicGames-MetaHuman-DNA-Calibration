<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classterse_1_1BinaryOutputArchive" kind="class" language="C++" prot="public">
    <compoundname>terse::BinaryOutputArchive</compoundname>
    <basecompoundref refid="classterse_1_1ExtendableBinaryOutputArchive" prot="public" virt="non-virtual">terse::ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</basecompoundref>
    <includes refid="binary_2OutputArchive_8h" local="no">OutputArchive.h</includes>
    <templateparamlist>
      <param>
        <type>class TStream</type>
      </param>
      <param>
        <type>typename TSize</type>
        <defval>std::uint32_t</defval>
      </param>
      <param>
        <type>typename TOffset</type>
        <defval>TSize</defval>
      </param>
      <param>
        <type><ref refid="namespaceterse_1aa7562cd5f24037b483789458d85d5a89" kindref="member">Endianness</ref></type>
        <declname>EByteOrder</declname>
        <defname>EByteOrder</defname>
        <defval><ref refid="namespaceterse_1aa7562cd5f24037b483789458d85d5a89aeec89088ee408b80387155272b113256" kindref="member">Endianness::Network</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classterse_1_1BinaryOutputArchive_1a97809cb4969b681381eb7c8ff7d86b3b" prot="public" static="no">
        <type><ref refid="classterse_1_1ExtendableBinaryOutputArchive" kindref="compound">ExtendableBinaryOutputArchive</ref>&lt; <ref refid="classterse_1_1BinaryOutputArchive" kindref="compound">BinaryOutputArchive</ref>, TStream, TSize, TOffset, EByteOrder &gt;</type>
        <definition>using terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::BaseArchive =  ExtendableBinaryOutputArchive&lt;BinaryOutputArchive, TStream, TSize, TOffset, EByteOrder&gt;</definition>
        <argsstring></argsstring>
        <name>BaseArchive</name>
        <qualifiedname>terse::BinaryOutputArchive::BaseArchive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" line="268" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classterse_1_1BinaryOutputArchive_1ae4beea0c3a98795fc5bc2c16b23991fe" prot="public" static="no" mutable="no">
        <type>friend</type>
        <definition>friend terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::Archive&lt; BinaryOutputArchive &gt;</definition>
        <argsstring></argsstring>
        <name>Archive&lt; BinaryOutputArchive &gt;</name>
        <qualifiedname>terse::BinaryOutputArchive::Archive&lt; BinaryOutputArchive &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" line="269" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classterse_1_1BinaryOutputArchive_1a665b72b40a1983363dc5f4ceff5640f1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::BinaryOutputArchive</definition>
        <argsstring>(TStream *stream_)</argsstring>
        <name>BinaryOutputArchive</name>
        <qualifiedname>terse::BinaryOutputArchive::BinaryOutputArchive</qualifiedname>
        <param>
          <type>TStream *</type>
          <declname>stream_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" line="272" column="18" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" bodystart="272" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classterse_1_1BinaryOutputArchive_1a8de8d76c4033d818d6d349237c278def" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::process</definition>
        <argsstring>(T &amp;&amp;dest)</argsstring>
        <name>process</name>
        <qualifiedname>terse::BinaryOutputArchive::process</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" line="277" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" bodystart="277" bodyend="279"/>
        <references refid="classterse_1_1ExtendableBinaryOutputArchive_1a72a8fb88226185103eced8d5ef521bfd" compoundref="binary_2OutputArchive_8h" startline="67" endline="69">terse::ExtendableBinaryOutputArchive&lt; TExtender, TStream, TSize, TOffset, EByteOrder &gt;::process</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>terse::Archive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>terse::Archive&lt; TExtender &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; TExtender &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>terse::BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>terse::BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>terse::BinaryOutputArchive&lt; trio::BoundedIOStream &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; trio::BoundedIOStream &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>terse::BinaryOutputArchive&lt; trio::BoundedIOStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; trio::BoundedIOStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>terse::BinaryOutputArchive&lt; trio::BoundedIOStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; trio::BoundedIOStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>terse::ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryOutputArchive"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>terse::Archive&lt; ArchiveImpl &gt;</label>
        <link refid="classterse_1_1Archive"/>
      </node>
      <node id="1">
        <label>terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>terse::ExtendableBinaryOutputArchive&lt; TExtender, TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryOutputArchive"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>terse::Archive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt; &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-impl</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>terse::Archive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-impl</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>terse::Archive&lt; TExtender &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; TExtender &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>terse::BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>terse::BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>terse::ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;, TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryOutputArchive"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;, TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>terse::ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryOutputArchive"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>terse::Archive&lt; ArchiveImpl &gt;</label>
        <link refid="classterse_1_1Archive"/>
      </node>
      <node id="8">
        <label>terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>terse::BinaryOutputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryOutputArchive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>terse::ExtendableBinaryOutputArchive&lt; TExtender, TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryOutputArchive"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" line="262" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/OutputArchive.h" bodystart="266" bodyend="281"/>
    <listofallmembers>
      <member refid="classterse_1_1Archive_1a42458df7d5e4e87755c88dd01f866640" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>Archive</name></member>
      <member refid="classterse_1_1BinaryOutputArchive_1ae4beea0c3a98795fc5bc2c16b23991fe" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>Archive&lt; BinaryOutputArchive &gt;</name></member>
      <member refid="classterse_1_1BinaryOutputArchive_1a97809cb4969b681381eb7c8ff7d86b3b" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>BaseArchive</name></member>
      <member refid="classterse_1_1BinaryOutputArchive_1a665b72b40a1983363dc5f4ceff5640f1" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>BinaryOutputArchive</name></member>
      <member refid="classterse_1_1Archive_1a0e3a84f35cb1d9799566a4f4df6af694" prot="protected" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>dispatch</name></member>
      <member refid="classterse_1_1Archive_1ab765e22c9a8bcab4e98d9b593577de82" prot="protected" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>dispatch</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a219c6920409163b387366616d14275fc" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>endianness</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1aaf4d47689f5eefaf6304be232f8cd707" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>ExtendableBinaryOutputArchive</name></member>
      <member refid="classterse_1_1Archive_1a7a9fc12b40284867ff4969c6c48c8982" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>getUserData</name></member>
      <member refid="classterse_1_1Archive_1a462e059ee44f6ab246bfff8d444144c3" prot="private" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>impl</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a0ba443c66ec9af611eb5e94802478f38" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>isOk</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a59cafa4b48a029db7bcfc38ae2b1d24b" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>label</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a2f1a75d00cb1d21dc8aa3b7e7a523520" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>OffsetType</name></member>
      <member refid="classterse_1_1Archive_1a4df3e8d790c6bb1e74763f2952c9ad65" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>operator()</name></member>
      <member refid="classterse_1_1Archive_1a06b33e08fd4d274553a8717f5da84c22" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>operator&lt;&lt;</name></member>
      <member refid="classterse_1_1Archive_1a2be0b456566c72d32680de9b9a6f2904" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>operator&gt;&gt;</name></member>
      <member refid="classterse_1_1BinaryOutputArchive_1a8de8d76c4033d818d6d349237c278def" prot="private" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a72a8fb88226185103eced8d5ef521bfd" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a65c4ca01e4e1a02d7f4cdd6aa13e8ce1" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1aaad121eb9000007ecb6d5e5d403c0e35" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a2e4772f04a43da7a7addd919ab8df1df" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a8396f0f2e69c097e49a160537dbb9094" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1adb98982df4a50f6ae12037ea317c054a" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1af3564e115f6f0d30a2aab5cb9a9c263e" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a3dd79dc61b7b8e79914b8ca17e1c0ea2" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1af8dbd61aaa36b5f1e6772105b20ec76a" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a2718d1f84d0ccca317ce84b1aef305dd" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1afe70b635999e16416e838c4a1b651ae1" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1aaa13983c52b4ad342d3cc6ec5bead6b7" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a4a8660cb5e4cb89608c2e93a1dad8c8f" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a94d0409172c418de9cc136a3ffb3d7ef" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a8df20daf110f27027c6299103d7d0442" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a141f28eee91f40a6a39f2030a390a215" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryOutputArchive&lt; BinaryOutputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryOutputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a4e98f41fe33ce6e013c835ec9687cba6" prot="protected" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1abd105483f289fc94aa4888df98233883" prot="protected" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a82f4921b9f4ddb89fade0886126e318a" prot="protected" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1affb83332e7aec3a0bcddde72f51dd3a4" prot="protected" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>processSize</name></member>
      <member refid="classterse_1_1Archive_1ac64d0bb1ad778cb392e026d002e74f33" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>setUserData</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1afdca38784bb2d8b7d627c557b29a3e15" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>SizeType</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1a68a43b2cbbfa64fd98d5171969da0c1d" prot="private" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>stream</name></member>
      <member refid="classterse_1_1ExtendableBinaryOutputArchive_1accca92e8ef1fcc7db7d44384959aea08" prot="public" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>sync</name></member>
      <member refid="classterse_1_1Archive_1a0e9b96481b56e7de196e700cf5ffe5cb" prot="private" virt="non-virtual"><scope>terse::BinaryOutputArchive</scope><name>userData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
