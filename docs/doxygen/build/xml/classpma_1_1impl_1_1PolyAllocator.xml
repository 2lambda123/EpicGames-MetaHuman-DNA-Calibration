<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classpma_1_1impl_1_1PolyAllocator" kind="class" language="C++" prot="public">
    <compoundname>pma::impl::PolyAllocator</compoundname>
    <includes refid="PolyAllocator_8h" local="no">PolyAllocator.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Alignment</declname>
        <defname>Alignment</defname>
      </param>
      <param>
        <type>class TDefaultMemoryResource</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" prot="public" static="no">
        <type>T</type>
        <definition>using pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>pma::impl::PolyAllocator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="35" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpma_1_1impl_1_1PolyAllocator_1a11ee6fbcc2fa7627c65b9d0194f1f400" prot="public" static="no">
        <type>std::allocator_traits&lt; <ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref> &gt;</type>
        <definition>using pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::traits_type =  std::allocator_traits&lt;PolyAllocator&gt;</definition>
        <argsstring></argsstring>
        <name>traits_type</name>
        <qualifiedname>pma::impl::PolyAllocator::traits_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="36" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpma_1_1impl_1_1PolyAllocator_1a0afa50d97b92eeacf594abfcd58bc512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>UAlignment</declname>
            <defname>UAlignment</defname>
          </param>
          <param>
            <type>class UDefaultMemoryResource</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class PolyAllocator</definition>
        <argsstring></argsstring>
        <name>PolyAllocator</name>
        <qualifiedname>pma::impl::PolyAllocator::PolyAllocator</qualifiedname>
        <param>
          <type><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="39" column="22" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" prot="private" static="no" mutable="no">
        <type><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref> *</type>
        <definition>MemoryResource* pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::pMemRes</definition>
        <argsstring></argsstring>
        <name>pMemRes</name>
        <qualifiedname>pma::impl::PolyAllocator::pMemRes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="121" column="24" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" compoundref="PolyAllocator_8h" startline="67" endline="69">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocateBytes</referencedby>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" compoundref="PolyAllocator_8h" startline="71" endline="73">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocateBytes</referencedby>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1ad984513f679866a6f166742aa85bfc71" compoundref="PolyAllocator_8h" startline="116" endline="118">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::getMemoryResource</referencedby>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1a6b25053f40101b2d5316ad3b8c0c0be7" compoundref="PolyAllocator_8h" startline="42" endline="52">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::PolyAllocator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a6b25053f40101b2d5316ad3b8c0c0be7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::PolyAllocator</definition>
        <argsstring>()</argsstring>
        <name>PolyAllocator</name>
        <qualifiedname>pma::impl::PolyAllocator::PolyAllocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="42" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="42" bodyend="52"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" compoundref="PolyAllocator_8h" startline="121">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::pMemRes</references>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1ae6797a3da3bd5b634547714a7cdb1a35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::PolyAllocator</definition>
        <argsstring>(MemoryResource *memRes)</argsstring>
        <name>PolyAllocator</name>
        <qualifiedname>pma::impl::PolyAllocator::PolyAllocator</qualifiedname>
        <param>
          <type><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref> *</type>
          <declname>memRes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="54" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="54" bodyend="58"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" compoundref="PolyAllocator_8h" startline="121">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::pMemRes</references>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a7fe9682580f181410e2f4a342ada8710" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::PolyAllocator</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>PolyAllocator</name>
        <qualifiedname>pma::impl::PolyAllocator::PolyAllocator</qualifiedname>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="60" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a100cba8ca392bf5dfcbce53e5a10297a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>UAlignment</declname>
            <defname>UAlignment</defname>
          </param>
          <param>
            <type>class UDefaultMemoryResource</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::PolyAllocator</definition>
        <argsstring>(const PolyAllocator&lt; U, UAlignment, UDefaultMemoryResource &gt; &amp;rhs)</argsstring>
        <name>PolyAllocator</name>
        <qualifiedname>pma::impl::PolyAllocator::PolyAllocator</qualifiedname>
        <param>
          <type>const <ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>&lt; U, UAlignment, UDefaultMemoryResource &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="64" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="64" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocateBytes</definition>
        <argsstring>(std::size_t size, std::size_t alignment=Alignment)</argsstring>
        <name>allocateBytes</name>
        <qualifiedname>pma::impl::PolyAllocator::allocateBytes</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>alignment</declname>
          <defval>Alignment</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="67" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="67" bodyend="69"/>
        <references refid="classpma_1_1MemoryResource_1ad43f9c740450042025424135a15497bc">pma::MemoryResource::allocate</references>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" compoundref="PolyAllocator_8h" startline="121">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::pMemRes</references>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" compoundref="PolyAllocator_8h" startline="76" endline="79">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocateObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocateBytes</definition>
        <argsstring>(void *ptr, std::size_t size, std::size_t alignment=Alignment)</argsstring>
        <name>deallocateBytes</name>
        <qualifiedname>pma::impl::PolyAllocator::deallocateBytes</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>alignment</declname>
          <defval>Alignment</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="71" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="71" bodyend="73"/>
        <references refid="classpma_1_1MemoryResource_1ae775e6f871764336db8dc4d95ba95b2b">pma::MemoryResource::deallocate</references>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" compoundref="PolyAllocator_8h" startline="121">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::pMemRes</references>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" compoundref="PolyAllocator_8h" startline="82" endline="86">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocateObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref></defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_void&lt; U &gt;::value, U * &gt;::type</type>
        <definition>std::enable_if&lt;!std::is_void&lt; U &gt;::value, U * &gt;::type pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocateObject</definition>
        <argsstring>(std::size_t count, std::size_t alignment=Alignment)</argsstring>
        <name>allocateObject</name>
        <qualifiedname>pma::impl::PolyAllocator::allocateObject</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>alignment</declname>
          <defval>Alignment</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="76" column="41" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="76" bodyend="79"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" compoundref="PolyAllocator_8h" startline="67" endline="69">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocateBytes</references>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1a0dc4f678265840efa81cce7264646294" compoundref="PolyAllocator_8h" startline="103" endline="105">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref></defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_void&lt; U &gt;::value &gt;::type</type>
        <definition>std::enable_if&lt;!std::is_void&lt; U &gt;::value &gt;::type pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocateObject</definition>
        <argsstring>(U *ptr, std::size_t count, std::size_t alignment=Alignment)</argsstring>
        <name>deallocateObject</name>
        <qualifiedname>pma::impl::PolyAllocator::deallocateObject</qualifiedname>
        <param>
          <type>U *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>alignment</declname>
          <defval>Alignment</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="82" column="41" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="82" bodyend="86"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" compoundref="PolyAllocator_8h" startline="71" endline="73">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocateBytes</references>
        <referencedby refid="classpma_1_1impl_1_1PolyAllocator_1af3176568a7b19da07996a7dd8927b4ab" compoundref="PolyAllocator_8h" startline="108" endline="110">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1af6623d1adb7eec221a20670e78c4420f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref></defval>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>U *</type>
        <definition>U * pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::newObject</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>newObject</name>
        <qualifiedname>pma::impl::PolyAllocator::newObject</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="89" column="11" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="89" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a0fc0b96949552d219088199183db5132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deleteObject</definition>
        <argsstring>(U *ptr)</argsstring>
        <name>deleteObject</name>
        <qualifiedname>pma::impl::PolyAllocator::deleteObject</qualifiedname>
        <param>
          <type>U *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="97" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1a0dc4f678265840efa81cce7264646294" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref> *</type>
        <definition>value_type * pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocate</definition>
        <argsstring>(std::size_t count)</argsstring>
        <name>allocate</name>
        <qualifiedname>pma::impl::PolyAllocator::allocate</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="103" column="20" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="103" bodyend="105"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" compoundref="PolyAllocator_8h" startline="76" endline="79">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::allocateObject</references>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1af3176568a7b19da07996a7dd8927b4ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocate</definition>
        <argsstring>(value_type *ptr, std::size_t count)</argsstring>
        <name>deallocate</name>
        <qualifiedname>pma::impl::PolyAllocator::deallocate</qualifiedname>
        <param>
          <type><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="108" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="108" bodyend="110"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" compoundref="PolyAllocator_8h" startline="82" endline="86">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::deallocateObject</references>
      </memberdef>
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1ad984513f679866a6f166742aa85bfc71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref> *</type>
        <definition>MemoryResource * pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::getMemoryResource</definition>
        <argsstring>() const</argsstring>
        <name>getMemoryResource</name>
        <qualifiedname>pma::impl::PolyAllocator::getMemoryResource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="116" column="24" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="116" bodyend="118"/>
        <references refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" compoundref="PolyAllocator_8h" startline="121">pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::pMemRes</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classpma_1_1impl_1_1PolyAllocator_1af6ef121ec36013e5f6086620b511f1ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;::getAlignment</definition>
        <argsstring>()</argsstring>
        <name>getAlignment</name>
        <qualifiedname>pma::impl::PolyAllocator::getAlignment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="112" column="28" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="112" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>pma::MemoryResource</label>
        <link refid="classpma_1_1MemoryResource"/>
      </node>
      <node id="1">
        <label>pma::impl::PolyAllocator&lt; T, Alignment, TDefaultMemoryResource &gt;</label>
        <link refid="classpma_1_1impl_1_1PolyAllocator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-pMemRes</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" line="33" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/PolyAllocator.h" bodystart="33" bodyend="122"/>
    <listofallmembers>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a0dc4f678265840efa81cce7264646294" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>allocate</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>allocateBytes</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>allocateObject</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1af3176568a7b19da07996a7dd8927b4ab" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>deallocate</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>deallocateBytes</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>deallocateObject</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a0fc0b96949552d219088199183db5132" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>deleteObject</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1af6ef121ec36013e5f6086620b511f1ed" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>getAlignment</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1ad984513f679866a6f166742aa85bfc71" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>getMemoryResource</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1af6623d1adb7eec221a20670e78c4420f" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>newObject</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" prot="private" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>pMemRes</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a0afa50d97b92eeacf594abfcd58bc512" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>PolyAllocator</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a6b25053f40101b2d5316ad3b8c0c0be7" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>PolyAllocator</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1ae6797a3da3bd5b634547714a7cdb1a35" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>PolyAllocator</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a7fe9682580f181410e2f4a342ada8710" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>PolyAllocator</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a100cba8ca392bf5dfcbce53e5a10297a" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>PolyAllocator</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a11ee6fbcc2fa7627c65b9d0194f1f400" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>traits_type</name></member>
      <member refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" prot="public" virt="non-virtual"><scope>pma::impl::PolyAllocator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
