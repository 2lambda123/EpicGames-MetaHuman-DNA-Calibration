<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacetdm_1_1projective" kind="namespace" inline="yes" language="C++">
    <compoundname>tdm::projective</compoundname>
    <innerclass refid="structtdm_1_1projective_1_1axis__angle" prot="public">tdm::projective::axis_angle</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetdm_1_1projective_1a6d871452e6ba8e5af822c3d3f4573139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; tdm::projective::rotate</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;axis, T radians, handedness h=handedness::right)</argsstring>
        <name>rotate</name>
        <qualifiedname>tdm::projective::rotate</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a0ee1135015dc380efab2a1f62e27d32c" kindref="member">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>T</type>
          <declname>radians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="53" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="53" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a531b788392d682b3b5507feceeaba471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; tdm::projective::rotate</definition>
        <argsstring>(const mat4&lt; T &gt; &amp;m, const vec3&lt; T &gt; &amp;axis, T radians, handedness h=handedness::right)</argsstring>
        <name>rotate</name>
        <qualifiedname>tdm::projective::rotate</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetdm_1a0ee1135015dc380efab2a1f62e27d32c" kindref="member">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>T</type>
          <declname>radians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="77" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a64b5932ac17185165bf65c2000cddfb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; tdm::projective::rotate</definition>
        <argsstring>(T xRadians, T yRadians, T zRadians, handedness h=handedness::right)</argsstring>
        <name>rotate</name>
        <qualifiedname>tdm::projective::rotate</qualifiedname>
        <param>
          <type>T</type>
          <declname>xRadians</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yRadians</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zRadians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="82" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="82" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a734e16d0c46de4f6622e1c8a631bfa53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; tdm::projective::rotate</definition>
        <argsstring>(const mat4&lt; T &gt; &amp;m, T xRadians, T yRadians, T zRadians, handedness h=handedness::right)</argsstring>
        <name>rotate</name>
        <qualifiedname>tdm::projective::rotate</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T</type>
          <declname>xRadians</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yRadians</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zRadians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="108" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a55b0b5111d65a205801e520b83a91e4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; tdm::projective::rotate</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;radians, handedness h=handedness::right)</argsstring>
        <name>rotate</name>
        <qualifiedname>tdm::projective::rotate</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a0ee1135015dc380efab2a1f62e27d32c" kindref="member">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>radians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="113" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1abac0d987f95650a5086a231364064fbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; tdm::projective::rotate</definition>
        <argsstring>(const mat4&lt; T &gt; &amp;m, const vec3&lt; T &gt; &amp;radians, handedness h=handedness::right)</argsstring>
        <name>rotate</name>
        <qualifiedname>tdm::projective::rotate</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a3fe6100e4962363b1a4be245b13d527c" kindref="member">mat4</ref>&lt; T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetdm_1a0ee1135015dc380efab2a1f62e27d32c" kindref="member">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>radians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="118" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a3f30f4777ac8bdc4e0eb5c96ab634a58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>dim_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt;</type>
        <definition>mat&lt; L+1, L+1, T &gt; tdm::projective::scale</definition>
        <argsstring>(const vec&lt; L, T &gt; &amp;factors)</argsstring>
        <name>scale</name>
        <qualifiedname>tdm::projective::scale</qualifiedname>
        <param>
          <type>const <ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&lt; L, T &gt; &amp;</type>
          <declname>factors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="123" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a0f73dee532160054f7aeb723d3371162" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>dim_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt;</type>
        <definition>mat&lt; L+1, L+1, T &gt; tdm::projective::scale</definition>
        <argsstring>(const mat&lt; L+1, L+1, T &gt; &amp;m, const vec&lt; L, T &gt; &amp;factors)</argsstring>
        <name>scale</name>
        <qualifiedname>tdm::projective::scale</qualifiedname>
        <param>
          <type>const <ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&lt; L, T &gt; &amp;</type>
          <declname>factors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="132" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1aa3af28aac1eb1d3b1b6d6e66fdc95b59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>dim_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt;</type>
        <definition>mat&lt; L+1, L+1, T &gt; tdm::projective::scale</definition>
        <argsstring>(T factor)</argsstring>
        <name>scale</name>
        <qualifiedname>tdm::projective::scale</qualifiedname>
        <param>
          <type>T</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="137" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1af07ccf333c2d31d6b28e2a854e4b758a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>dim_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L, L, T &gt;</type>
        <definition>mat&lt; L, L, T &gt; tdm::projective::scale</definition>
        <argsstring>(const mat&lt; L, L, T &gt; &amp;m, T factor)</argsstring>
        <name>scale</name>
        <qualifiedname>tdm::projective::scale</qualifiedname>
        <param>
          <type>const <ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L, L, T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="142" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1acebdfbfa65a7452ac8b81acd0b618eee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>dim_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt;</type>
        <definition>mat&lt; L+1, L+1, T &gt; tdm::projective::translate</definition>
        <argsstring>(const vec&lt; L, T &gt; &amp;position)</argsstring>
        <name>translate</name>
        <qualifiedname>tdm::projective::translate</qualifiedname>
        <param>
          <type>const <ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&lt; L, T &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="147" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1ac120cb33694cec606634642dc48019e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>dim_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt;</type>
        <definition>mat&lt; L+1, L+1, T &gt; tdm::projective::translate</definition>
        <argsstring>(const mat&lt; L+1, L+1, T &gt; &amp;m, const vec&lt; L, T &gt; &amp;position)</argsstring>
        <name>translate</name>
        <qualifiedname>tdm::projective::translate</qualifiedname>
        <param>
          <type>const <ref refid="structtdm_1_1mat" kindref="compound">mat</ref>&lt; L+1, L+1, T &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&lt; L, T &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="156" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1ab6b0c39e3a4f3435a1b3445dc0a93e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1projective_1_1axis__angle" kindref="compound">axis_angle</ref>&lt; T &gt;</type>
        <definition>axis_angle&lt; T &gt; tdm::projective::xyz2AxisAngle</definition>
        <argsstring>(T xRadians, T yRadians, T zRadians, handedness h=handedness::right)</argsstring>
        <name>xyz2AxisAngle</name>
        <qualifiedname>tdm::projective::xyz2AxisAngle</qualifiedname>
        <param>
          <type>T</type>
          <declname>xRadians</declname>
        </param>
        <param>
          <type>T</type>
          <declname>yRadians</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zRadians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="167" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="167" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="namespacetdm_1_1projective_1a070fb9fdf44db8b854ade70147a8ce4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structtdm_1_1projective_1_1axis__angle" kindref="compound">axis_angle</ref>&lt; T &gt;</type>
        <definition>axis_angle&lt; T &gt; tdm::projective::xyz2AxisAngle</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;radians, handedness h=handedness::right)</argsstring>
        <name>xyz2AxisAngle</name>
        <qualifiedname>tdm::projective::xyz2AxisAngle</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a0ee1135015dc380efab2a1f62e27d32c" kindref="member">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>radians</declname>
        </param>
        <param>
          <type><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aed" kindref="member">handedness</ref></type>
          <declname>h</declname>
          <defval><ref refid="namespacetdm_1a4c1144e7275ec98fc638359109142aeda7c4f29407893c334a6cb7a87bf045c0d" kindref="member">handedness::right</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="178" column="12" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" bodystart="178" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Transforms.h" line="50" column="8"/>
  </compounddef>
</doxygen>
