<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classterse_1_1BinaryInputArchive" kind="class" language="C++" prot="public">
    <compoundname>terse::BinaryInputArchive</compoundname>
    <basecompoundref refid="classterse_1_1ExtendableBinaryInputArchive" prot="public" virt="non-virtual">terse::ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</basecompoundref>
    <includes refid="binary_2InputArchive_8h" local="no">InputArchive.h</includes>
    <templateparamlist>
      <param>
        <type>class TStream</type>
      </param>
      <param>
        <type>typename TSize</type>
        <defval>std::uint32_t</defval>
      </param>
      <param>
        <type>typename TOffset</type>
        <defval>TSize</defval>
      </param>
      <param>
        <type><ref refid="namespaceterse_1aa7562cd5f24037b483789458d85d5a89" kindref="member">Endianness</ref></type>
        <declname>EByteOrder</declname>
        <defname>EByteOrder</defname>
        <defval><ref refid="namespaceterse_1aa7562cd5f24037b483789458d85d5a89aeec89088ee408b80387155272b113256" kindref="member">Endianness::Network</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classterse_1_1BinaryInputArchive_1a3c15b7cbee911142781da72e64aa868f" prot="private" static="no">
        <type><ref refid="classterse_1_1ExtendableBinaryInputArchive" kindref="compound">ExtendableBinaryInputArchive</ref>&lt; <ref refid="classterse_1_1BinaryInputArchive" kindref="compound">BinaryInputArchive</ref>, TStream, TSize, TOffset, EByteOrder &gt;</type>
        <definition>using terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::BaseArchive =  ExtendableBinaryInputArchive&lt;BinaryInputArchive, TStream, TSize, TOffset, EByteOrder&gt;</definition>
        <argsstring></argsstring>
        <name>BaseArchive</name>
        <qualifiedname>terse::BinaryInputArchive::BaseArchive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" line="270" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classterse_1_1BinaryInputArchive_1a8c25924f65ffef8aabe32d57e4e55b56" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::Archive&lt; BinaryInputArchive &gt;</definition>
        <argsstring></argsstring>
        <name>Archive&lt; BinaryInputArchive &gt;</name>
        <qualifiedname>terse::BinaryInputArchive::Archive&lt; BinaryInputArchive &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" line="271" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classterse_1_1BinaryInputArchive_1aa91d55a83329901266fb35fa09d85204" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::BinaryInputArchive</definition>
        <argsstring>(TStream *stream_)</argsstring>
        <name>BinaryInputArchive</name>
        <qualifiedname>terse::BinaryInputArchive::BinaryInputArchive</qualifiedname>
        <param>
          <type>TStream *</type>
          <declname>stream_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" line="274" column="18" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" bodystart="274" bodyend="275"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classterse_1_1BinaryInputArchive_1ad68384b222c0ecf5b8182be99f398e8b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;::process</definition>
        <argsstring>(T &amp;&amp;dest)</argsstring>
        <name>process</name>
        <qualifiedname>terse::BinaryInputArchive::process</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" line="279" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" bodystart="279" bodyend="281"/>
        <references refid="classterse_1_1ExtendableBinaryInputArchive_1ae6b8a2259de518324ad11b9ac6f8f3bd" compoundref="binary_2InputArchive_8h" startline="67" endline="69">terse::ExtendableBinaryInputArchive&lt; TExtender, TStream, TSize, TOffset, EByteOrder &gt;::process</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>terse::Archive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>terse::Archive&lt; TExtender &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; TExtender &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>terse::BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>terse::BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>terse::ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryInputArchive"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>terse::Archive&lt; ArchiveImpl &gt;</label>
        <link refid="classterse_1_1Archive"/>
      </node>
      <node id="1">
        <label>terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>terse::ExtendableBinaryInputArchive&lt; TExtender, TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryInputArchive"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>terse::Archive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt; &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-impl</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>terse::Archive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-impl</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>terse::Archive&lt; TExtender &gt;</label>
        <link refid="classterse_1_1Archive"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; TExtender &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>terse::BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>terse::BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>terse::ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;, TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryInputArchive"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;, TStream, std::uint32_t, std::uint32_t, EByteOrder &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>terse::ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryInputArchive"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>terse::Archive&lt; ArchiveImpl &gt;</label>
        <link refid="classterse_1_1Archive"/>
      </node>
      <node id="8">
        <label>terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>terse::BinaryInputArchive&lt; TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1BinaryInputArchive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>terse::ExtendableBinaryInputArchive&lt; TExtender, TStream, TSize, TOffset, EByteOrder &gt;</label>
        <link refid="classterse_1_1ExtendableBinaryInputArchive"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" line="264" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/binary/InputArchive.h" bodystart="268" bodyend="283"/>
    <listofallmembers>
      <member refid="classterse_1_1Archive_1a42458df7d5e4e87755c88dd01f866640" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>Archive</name></member>
      <member refid="classterse_1_1BinaryInputArchive_1a8c25924f65ffef8aabe32d57e4e55b56" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>Archive&lt; BinaryInputArchive &gt;</name></member>
      <member refid="classterse_1_1BinaryInputArchive_1a3c15b7cbee911142781da72e64aa868f" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>BaseArchive</name></member>
      <member refid="classterse_1_1BinaryInputArchive_1aa91d55a83329901266fb35fa09d85204" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>BinaryInputArchive</name></member>
      <member refid="classterse_1_1Archive_1a0e3a84f35cb1d9799566a4f4df6af694" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>dispatch</name></member>
      <member refid="classterse_1_1Archive_1ab765e22c9a8bcab4e98d9b593577de82" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>dispatch</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a1cb4dcafeea7813ac227105d95cb12ae" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>endianness</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a7405c9535ef44e9d5156e89bd8d284f7" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>ExtendableBinaryInputArchive</name></member>
      <member refid="classterse_1_1Archive_1a7a9fc12b40284867ff4969c6c48c8982" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>getUserData</name></member>
      <member refid="classterse_1_1Archive_1a462e059ee44f6ab246bfff8d444144c3" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>impl</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a74f6c013e374f3777bf4b5a72adb3bfb" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>isOk</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a7e0d8fef862834689b7df40fe84e21cc" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>label</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a5e4ff731f728bcd9a9135f951f70612e" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>OffsetType</name></member>
      <member refid="classterse_1_1Archive_1a4df3e8d790c6bb1e74763f2952c9ad65" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>operator()</name></member>
      <member refid="classterse_1_1Archive_1a06b33e08fd4d274553a8717f5da84c22" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>operator&lt;&lt;</name></member>
      <member refid="classterse_1_1Archive_1a2be0b456566c72d32680de9b9a6f2904" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>operator&gt;&gt;</name></member>
      <member refid="classterse_1_1BinaryInputArchive_1ad68384b222c0ecf5b8182be99f398e8b" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1ae6b8a2259de518324ad11b9ac6f8f3bd" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1aff1d879c896111a56f8efd01fb66a973" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1aa2fe4da437f4519c2c1ae6e14be404d1" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a4cf5e7a27503127138b86ebe858b95d3" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1ad63df9f82b8cf217cdb283244e6bd174" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1adf2d9333950a59a4a5aafe10c3136b2c" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a76d4aaca1e2a2d4c360c5c5bd1858c53" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a071ae480d7f79db9582e9753f65e9de8" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a5eaf522812d1c76931017ca9e8473f14" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1aa04f91438376a1e10f789f49dcdced7e" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a34e68fafa278cf68e7267c833ed72858" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a870eb5b50d35453e4b837d1644f74032" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a6b445304dd1df8aa7fece122a6bac7af" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a587485377909b682caeb54fde7d4f244" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a5b75a55a728a3f347a063466009f8d59" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a136707450a287df7f3dcff81d134fc42" prot="protected" virt="non-virtual" ambiguityscope="ExtendableBinaryInputArchive&lt; BinaryInputArchive&lt; TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;, TStream, std::uint32_t, std::uint32_t, Endianness::Network &gt;::"><scope>terse::BinaryInputArchive</scope><name>process</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a04fea441b82d9ee2222d44c54d9995d6" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a6d6b562a585bfe59ded501978c9e6c17" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a2f4077cf50e25454032571ce5cac2c58" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a26a571c4043a1178d86d4b94a3a63dc3" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>processElements</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1ac55fa9162ae1abe23f996b2814a9b68b" prot="protected" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>processSize</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1acda97880720c4895554408fbffaf7929" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>resize</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a6a2c06bc2da07187f709fc1bfa391b53" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>resize</name></member>
      <member refid="classterse_1_1Archive_1ac64d0bb1ad778cb392e026d002e74f33" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>setUserData</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a803296e3398b85ebafec055450e21cc5" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>SizeType</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1a8360d0098171f5916258596e9ccc7ee8" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>stream</name></member>
      <member refid="classterse_1_1ExtendableBinaryInputArchive_1aae34613f1ae978f063b9029ae2ff6904" prot="public" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>sync</name></member>
      <member refid="classterse_1_1Archive_1a0e9b96481b56e7de196e700cf5ffe5cb" prot="private" virt="non-virtual"><scope>terse::BinaryInputArchive</scope><name>userData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
