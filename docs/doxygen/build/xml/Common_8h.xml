<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Common_8h" kind="file" language="C++">
    <compoundname>Common.h</compoundname>
    <includes refid="Traits_8h" local="yes">terse/archives/Traits.h</includes>
    <includes local="no">tuple</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="binary_2InputArchive_8h" local="yes">InputArchive.h</includedby>
    <includedby refid="json_2InputArchive_8h" local="yes">InputArchive.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Common.h</label>
        <link refid="Common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>terse/archives/Traits.h</label>
        <link refid="Traits_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="6">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>BinaryStreamReaderImpl.cpp</label>
        <link refid="BinaryStreamReaderImpl_8cpp"/>
      </node>
      <node id="4">
        <label>BinaryStreamReaderImpl.h</label>
        <link refid="BinaryStreamReaderImpl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>FilteredInputArchive.cpp</label>
        <link refid="FilteredInputArchive_8cpp"/>
      </node>
      <node id="3">
        <label>FilteredInputArchive.h</label>
        <link refid="FilteredInputArchive_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>JSONStreamReaderImpl.cpp</label>
        <link refid="JSONStreamReaderImpl_8cpp"/>
      </node>
      <node id="8">
        <label>JSONStreamReaderImpl.h</label>
        <link refid="JSONStreamReaderImpl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Common.h</label>
        <link refid="Common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>InputArchive.h</label>
        <link refid="binary_2InputArchive_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>InputArchive.h</label>
        <link refid="json_2InputArchive_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structterse_1_1impl_1_1ValueFactory" prot="public">terse::impl::ValueFactory</innerclass>
    <innernamespace refid="namespacepma">pma</innernamespace>
    <innernamespace refid="namespaceterse">terse</innernamespace>
    <innernamespace refid="namespaceterse_1_1impl">terse::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Traits_8h" kindref="compound">terse/archives/Traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(disable<sp/>:<sp/>4365<sp/>4987)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepma" kindref="compound">pma</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemoryResource;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceterse" kindref="compound">terse</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespaceterse_1_1impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">impl<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="28" refid="structterse_1_1impl_1_1ValueFactory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structterse_1_1impl_1_1ValueFactory" kindref="compound">ValueFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="structterse_1_1impl_1_1ValueFactory_1afc1394548a0f6c8c938235e220d89a9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1afc1394548a0f6c8c938235e220d89a9b" kindref="member">NeedsAllocator</ref><sp/>=<sp/><ref refid="structterse_1_1traits_1_1needs__allocator" kindref="compound">traits::needs_allocator&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="30" refid="structterse_1_1impl_1_1ValueFactory_1a0c0ce6f0e85b6c9d39099df91067ec01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a0c0ce6f0e85b6c9d39099df91067ec01" kindref="member">NeedsMemoryResource</ref><sp/>=<sp/>std::is_constructible&lt;T,<sp/>pma::MemoryResource*&gt;::value;</highlight></codeline>
<codeline lineno="31" refid="structterse_1_1impl_1_1ValueFactory_1ae7675f33b8c82f1bf30e1cc66736c7d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1ae7675f33b8c82f1bf30e1cc66736c7d4" kindref="member">IsPair</ref><sp/>=<sp/><ref refid="structterse_1_1traits_1_1is__pair" kindref="compound">traits::is_pair&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="32" refid="structterse_1_1impl_1_1ValueFactory_1a81455083ec05c6dd42c9e99adfd04d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a81455083ec05c6dd42c9e99adfd04d5b" kindref="member">IsTuple</ref><sp/>=<sp/><ref refid="structterse_1_1traits_1_1is__tuple" kindref="compound">traits::is_tuple&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="33" refid="structterse_1_1impl_1_1ValueFactory_1ab1af64b1d263e1008b3728acae211f29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1ab1af64b1d263e1008b3728acae211f29" kindref="member">IsPrimitive</ref><sp/>=<sp/>(!<ref refid="structterse_1_1impl_1_1ValueFactory_1afc1394548a0f6c8c938235e220d89a9b" kindref="member">NeedsAllocator</ref><sp/>&amp;&amp;<sp/>!<ref refid="structterse_1_1impl_1_1ValueFactory_1a0c0ce6f0e85b6c9d39099df91067ec01" kindref="member">NeedsMemoryResource</ref><sp/>&amp;<sp/>!<ref refid="structterse_1_1impl_1_1ValueFactory_1ae7675f33b8c82f1bf30e1cc66736c7d4" kindref="member">IsPair</ref><sp/>&amp;<sp/>!<ref refid="structterse_1_1impl_1_1ValueFactory_1a81455083ec05c6dd42c9e99adfd04d5b" kindref="member">IsTuple</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ParentAllocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPrimitive<sp/>=<sp/>IsPrimitive&gt;</highlight></codeline>
<codeline lineno="36" refid="structterse_1_1impl_1_1ValueFactory_1a53db163f35fcd72090cb78513c574bf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;IsPrimitive,<sp/>T&gt;::type<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a53db163f35fcd72090cb78513c574bf4" kindref="member">create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParentAllocator&amp;<sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T{};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ParentAllocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPrimitive<sp/>=<sp/>IsPrimitive&gt;</highlight></codeline>
<codeline lineno="41" refid="structterse_1_1impl_1_1ValueFactory_1ad49ef3256991c0d39e44dd7eed521f1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!IsPrimitive<sp/>&amp;&amp;<sp/>NeedsMemoryResource,<sp/>T&gt;::type<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1ad49ef3256991c0d39e44dd7eed521f1b" kindref="member">create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParentAllocator&amp;<sp/>alloc)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T{alloc.getMemoryResource()};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ParentAllocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPrimitive<sp/>=<sp/>IsPrimitive&gt;</highlight></codeline>
<codeline lineno="46" refid="structterse_1_1impl_1_1ValueFactory_1a8038427776a6ae107e5a8431c8dd4cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!IsPrimitive<sp/>&amp;&amp;<sp/>!NeedsMemoryResource<sp/>&amp;&amp;<sp/>NeedsAllocator,<sp/>T&gt;::type<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a8038427776a6ae107e5a8431c8dd4cef" kindref="member">create</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParentAllocator&amp;<sp/>alloc)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TAllocator<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::allocator_traits&lt;ParentAllocator&gt;::template<sp/>rebind_alloc&lt;typename<sp/>T::value_type&gt;;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T{TAllocator{alloc}};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ParentAllocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPrimitive<sp/>=<sp/>IsPrimitive&gt;</highlight></codeline>
<codeline lineno="53" refid="structterse_1_1impl_1_1ValueFactory_1a496ebe1ba1cd2ebb037f355777aa8b5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!IsPrimitive<sp/>&amp;&amp;<sp/>!NeedsMemoryResource<sp/>&amp;&amp;<sp/>!NeedsAllocator<sp/>&amp;&amp;<sp/>IsPair,<sp/>T&gt;::type<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a496ebe1ba1cd2ebb037f355777aa8b5b" kindref="member">create</ref>(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParentAllocator&amp;<sp/>alloc)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">K<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::first_type;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">V<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::second_type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T{<ref refid="structterse_1_1impl_1_1ValueFactory_1a53db163f35fcd72090cb78513c574bf4" kindref="member">ValueFactory&lt;K&gt;::create</ref>(alloc),<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a53db163f35fcd72090cb78513c574bf4" kindref="member">ValueFactory&lt;V&gt;::create</ref>(alloc)};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ParentAllocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPrimitive<sp/>=<sp/>IsPrimitive&gt;</highlight></codeline>
<codeline lineno="61" refid="structterse_1_1impl_1_1ValueFactory_1a488dc7598299713a0ff8c21632e2f4ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!IsPrimitive<sp/>&amp;&amp;<sp/>!NeedsMemoryResource<sp/>&amp;&amp;<sp/>!NeedsAllocator<sp/>&amp;&amp;<sp/>!IsPair<sp/>&amp;&amp;<sp/>IsTuple,<sp/>T&gt;::type<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a488dc7598299713a0ff8c21632e2f4ca" kindref="member">create</ref>(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParentAllocator&amp;<sp/>alloc)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">K<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::tuple_element&lt;0,<sp/>T&gt;::type;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">V<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::tuple_element&lt;0,<sp/>T&gt;::type;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T{<ref refid="structterse_1_1impl_1_1ValueFactory_1a53db163f35fcd72090cb78513c574bf4" kindref="member">ValueFactory&lt;K&gt;::create</ref>(alloc),<sp/><ref refid="structterse_1_1impl_1_1ValueFactory_1a53db163f35fcd72090cb78513c574bf4" kindref="member">ValueFactory&lt;V&gt;::create</ref>(alloc)};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>terse</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/archives/Common.h"/>
  </compounddef>
</doxygen>
