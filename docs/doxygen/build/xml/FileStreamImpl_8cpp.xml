<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="FileStreamImpl_8cpp" kind="file" language="C++">
    <compoundname>FileStreamImpl.cpp</compoundname>
    <includes refid="FileStreamImpl_8h" local="yes">trio/streams/FileStreamImpl.h</includes>
    <includes refid="NativeString_8h" local="yes">trio/utils/NativeString.h</includes>
    <includes refid="trio_2utils_2ScopedEnumEx_8h" local="yes">trio/utils/ScopedEnumEx.h</includes>
    <includes refid="PolyAllocator_8h" local="no">pma/PolyAllocator.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">ios</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="11">
        <label>pma/Defs.h</label>
        <link refid="pma_2Defs_8h"/>
      </node>
      <node id="10">
        <label>pma/MemoryResource.h</label>
        <link refid="MemoryResource_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>pma/PolyAllocator.h</label>
        <link refid="PolyAllocator_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>pma/ScopedPtr.h</label>
        <link refid="ScopedPtr_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>pma/TypeDefs.h</label>
        <link refid="include_2pma_2TypeDefs_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pma/resources/DefaultMemoryResource.h</label>
        <link refid="DefaultMemoryResource_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>status/Defs.h</label>
        <link refid="status_2Defs_8h"/>
      </node>
      <node id="19">
        <label>status/Provider.h</label>
        <link refid="Provider_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>status/Status.h</label>
        <link refid="Status_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>status/StatusCode.h</label>
        <link refid="StatusCode_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>trio/Concepts.h</label>
        <link refid="Concepts_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>trio/Defs.h</label>
        <link refid="trio_2Defs_8h"/>
      </node>
      <node id="5">
        <label>trio/Stream.h</label>
        <link refid="Stream_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>trio/streams/FileStream.h</label>
        <link refid="FileStream_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>trio/types/Aliases.h</label>
        <link refid="trio_2types_2Aliases_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>trio/types/Parameters.h</label>
        <link refid="Parameters_8h"/>
      </node>
      <node id="1">
        <label>FileStreamImpl.cpp</label>
        <link refid="FileStreamImpl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>trio/streams/FileStreamImpl.h</label>
        <link refid="FileStreamImpl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>trio/streams/StreamStatus.h</label>
        <link refid="StreamStatus_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>trio/utils/NativeString.h</label>
        <link refid="NativeString_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>trio/utils/ScopedEnumEx.h</label>
        <link refid="trio_2utils_2ScopedEnumEx_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="22">
        <label>array</label>
      </node>
      <node id="27">
        <label>cassert</label>
      </node>
      <node id="38">
        <label>clocale</label>
      </node>
      <node id="7">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>cstring</label>
      </node>
      <node id="40">
        <label>cwchar</label>
      </node>
      <node id="41">
        <label>fstream</label>
      </node>
      <node id="42">
        <label>ios</label>
      </node>
      <node id="31">
        <label>list</label>
      </node>
      <node id="32">
        <label>map</label>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
      <node id="29">
        <label>scoped_allocator</label>
      </node>
      <node id="33">
        <label>set</label>
      </node>
      <node id="20">
        <label>stdio.h</label>
      </node>
      <node id="34">
        <label>string</label>
      </node>
      <node id="30">
        <label>type_traits</label>
      </node>
      <node id="35">
        <label>unordered_map</label>
      </node>
      <node id="36">
        <label>unordered_set</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="37">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetrio">trio</innernamespace>
    <innernamespace refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03">trio::anonymous_namespace{FileStreamImpl.cpp}</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FileStreamImpl_8h" kindref="compound">trio/streams/FileStreamImpl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="NativeString_8h" kindref="compound">trio/utils/NativeString.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trio_2utils_2ScopedEnumEx_8h" kindref="compound">trio/utils/ScopedEnumEx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="PolyAllocator_8h" kindref="compound">pma/PolyAllocator.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(disable<sp/>:<sp/>4365<sp/>4987)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ios&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetrio" kindref="compound">trio</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref><sp/>=<sp/>4096ul;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1ac7acb4ac61162c7fdb3f9392c49149ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::uint64_t<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1ac7acb4ac61162c7fdb3f9392c49149ef" kindref="member">getFileSizeStd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetrio_1a7e7ab95bc38e14fb710084dbee394dad" kindref="member">NativeCharacter</ref>*<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamoff<sp/>fileSize<sp/>=<sp/>std::ifstream(path,<sp/>std::ios_base::ate<sp/>|<sp/>std::ios_base::binary).tellg();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fileSize<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(fileSize)<sp/>:<sp/>0ul);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1afa58d827cf481667e5b42650bea4f0b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1afa58d827cf481667e5b42650bea4f0b9" kindref="member">ensureFileExistsStd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetrio_1a7e7ab95bc38e14fb710084dbee394dad" kindref="member">NativeCharacter</ref>*<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>file;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>file.open(path);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.fail())<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>does<sp/>not<sp/>exist,<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.open(path,<sp/>std::ios_base::out);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classtrio_1_1FileStream_1a65809a260adc501a052a7d7476ad1553" kindref="member">FileStream::~FileStream</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classtrio_1_1FileStream_1a0d6564c770dac2d589f9300e50d6a820" refkind="member"><highlight class="normal"><ref refid="classtrio_1_1FileStream" kindref="compound">FileStream</ref>*<sp/><ref refid="classtrio_1_1FileStream_1a0d6564c770dac2d589f9300e50d6a820" kindref="member">FileStream::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116" kindref="member">AccessMode</ref><sp/>accessMode,<sp/><ref refid="namespacetrio_1a6020d2cf223a27e6f0c208754c379dce" kindref="member">OpenMode</ref><sp/>openMode,<sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>memRes)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">pma::PolyAllocator&lt;FileStreamImpl&gt;</ref><sp/>alloc{memRes};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alloc.newObject(path,<sp/>accessMode,<sp/>openMode,<sp/>memRes);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classtrio_1_1FileStream_1af77548a526355e8b3d8d890dd9a18789" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtrio_1_1FileStream_1af77548a526355e8b3d8d890dd9a18789" kindref="member">FileStream::destroy</ref>(<ref refid="classtrio_1_1FileStream" kindref="compound">FileStream</ref>*<sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINTNEXTLINE(cppcoreguidelines-pro-type-static-cast-downcast)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stream<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtrio_1_1FileStreamImpl" kindref="compound">FileStreamImpl</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(instance);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">pma::PolyAllocator&lt;FileStreamImpl&gt;</ref><sp/>alloc{stream-&gt;getMemoryResource()};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc.deleteObject(stream);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classtrio_1_1FileStreamImpl_1ad37cbd195d33a5f2cd40f035ab3d3d47" refkind="member"><highlight class="normal"><ref refid="classtrio_1_1FileStreamImpl_1ad37cbd195d33a5f2cd40f035ab3d3d47" kindref="member">FileStreamImpl::FileStreamImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path_,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116" kindref="member">AccessMode</ref><sp/>accessMode_,<sp/><ref refid="namespacetrio_1a6020d2cf223a27e6f0c208754c379dce" kindref="member">OpenMode</ref><sp/>openMode_,<sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>memRes_)<sp/>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>filePath{<ref refid="structtrio_1_1StringConverter" kindref="compound">NativeStringConverter</ref>::from(path_,<sp/>memRes_)},</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>fileAccessMode{accessMode_},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>fileOpenMode{openMode_},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSize{<ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1ac7acb4ac61162c7fdb3f9392c49149ef" kindref="member">getFileSizeStd</ref>(filePath.c_str())},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>memRes{memRes_}<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classtrio_1_1FileStreamImpl_1af5145015e4f7c55662aa7a248dc29c0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtrio_1_1FileStreamImpl_1af5145015e4f7c55662aa7a248dc29c0d" kindref="member">FileStreamImpl::open</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1adf03c5df9d13b53842a0856ef858a304" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.is_open())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1a20f4c9068fa8d05f6f6135c367fe4d24" kindref="member">AlreadyOpenError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ios_base::openmode<sp/>flags{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref>,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a7a1a5f3e79fdc91edf2f5ead9d66abb4" kindref="member">AccessMode::Read</ref>)<sp/>?<sp/>std::ios_base::in<sp/>:<sp/>flags);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref>,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a1129c0e4d43f2d121652a7302712cff6" kindref="member">AccessMode::Write</ref>)<sp/>?<sp/>std::ios_base::out<sp/>:<sp/>flags);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>(<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1a3d005b224c0cbed66889a4f4f8c69902" kindref="member">fileOpenMode</ref>,<sp/><ref refid="namespacetrio_1a6020d2cf223a27e6f0c208754c379dcea6ce976e8f061b2b5cfe4d0c50c3405dd" kindref="member">OpenMode::Binary</ref>)<sp/>?<sp/>std::ios_base::binary<sp/>:<sp/>flags);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>std::ios_base::ate;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref><sp/>==<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a70a2a84088d405a2e3f1e3accaa16723" kindref="member">AccessMode::ReadWrite</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1afa58d827cf481667e5b42650bea4f0b9" kindref="member">ensureFileExistsStd</ref>(<ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.open(<ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str(),<sp/>flags);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1a0298a701e6508d21a06a7a12beea4ba2" kindref="member">OpenError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a80e65d12e393b02062f876f2f203841f" kindref="member">fileSize</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.tellg());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a6f2a2ac467cec1b636300d6ed9ab9f48" kindref="member">seek</ref>(0ul);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classtrio_1_1FileStreamImpl_1a42f32344da4b9686abee8a71d4730ccb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtrio_1_1FileStreamImpl_1a42f32344da4b9686abee8a71d4730ccb" kindref="member">FileStreamImpl::close</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.close();</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classtrio_1_1FileStreamImpl_1a35066ab7b50de21eeca6a592c11a4cd1" refkind="member"><highlight class="normal">std::uint64_t<sp/><ref refid="classtrio_1_1FileStreamImpl_1a35066ab7b50de21eeca6a592c11a4cd1" kindref="member">FileStreamImpl::tell</ref>()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.tellp());</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classtrio_1_1FileStreamImpl_1a6f2a2ac467cec1b636300d6ed9ab9f48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtrio_1_1FileStreamImpl_1a6f2a2ac467cec1b636300d6ed9ab9f48" kindref="member">FileStreamImpl::seek</ref>(std::uint64_t<sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>seekable<sp/>=<sp/>(position<sp/>==<sp/>0ul<sp/>||<sp/>position<sp/>&lt;=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>())<sp/>&amp;&amp;<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seekable)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1afbe507ff2b39fc2ccb8550dfc27e0ce9" kindref="member">SeekError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.seekp(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamoff</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(position));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1afbe507ff2b39fc2ccb8550dfc27e0ce9" kindref="member">SeekError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classtrio_1_1FileStreamImpl_1abf0a546ad27b383f94b94e58a9210845" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classtrio_1_1FileStreamImpl_1abf0a546ad27b383f94b94e58a9210845" kindref="member">FileStreamImpl::read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>destination,<sp/>std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((destination<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.fail()<sp/>||<sp/>!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.is_open()<sp/>||<sp/>!<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref>,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a7a1a5f3e79fdc91edf2f5ead9d66abb4" kindref="member">AccessMode::Read</ref>))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1a5bca141b1213e5f752a4fde5679708bd" kindref="member">ReadError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0ul;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.read(destination,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamsize</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good()<sp/>&amp;&amp;<sp/>!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.eof())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1a5bca141b1213e5f752a4fde5679708bd" kindref="member">ReadError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bytesRead<sp/>=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.gcount();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bytesRead<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bytesRead)<sp/>:<sp/>0ul);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classtrio_1_1FileStreamImpl_1a6ea1c44150f144f5b632d4c32f62f08c" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classtrio_1_1FileStreamImpl_1abf0a546ad27b383f94b94e58a9210845" kindref="member">FileStreamImpl::read</ref>(<ref refid="classtrio_1_1Writable" kindref="compound">Writable</ref>*<sp/>destination,<sp/>std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((destination<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.fail()<sp/>||<sp/>!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.is_open()<sp/>||<sp/>!<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref>,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a7a1a5f3e79fdc91edf2f5ead9d66abb4" kindref="member">AccessMode::Read</ref>))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1a5bca141b1213e5f752a4fde5679708bd" kindref="member">ReadError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0ul;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref><sp/>&gt;<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.read(buffer,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamsize</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="classtrio_1_1Writable_1a463e8d3e652fc4c3ce971d3fc2eaec7e" kindref="member">write</ref>(buffer,<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref><sp/>-=<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.read(buffer,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamsize</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;<ref refid="classtrio_1_1Writable_1a463e8d3e652fc4c3ce971d3fc2eaec7e" kindref="member">write</ref>(buffer,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good()<sp/>&amp;&amp;<sp/>!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.eof())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1a5bca141b1213e5f752a4fde5679708bd" kindref="member">ReadError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bytesRead<sp/>=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.gcount();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bytesRead<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bytesRead)<sp/>:<sp/>0ul);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classtrio_1_1FileStreamImpl_1a21553243d67bcf7b017a24d71820c9fb" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classtrio_1_1FileStreamImpl_1a21553243d67bcf7b017a24d71820c9fb" kindref="member">FileStreamImpl::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source,<sp/>std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((source<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.fail()<sp/>||<sp/>!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.is_open()<sp/>||<sp/>!<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref>,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a1129c0e4d43f2d121652a7302712cff6" kindref="member">AccessMode::Write</ref>))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1adaa88ae7c4bbeda319710963adc81ce8" kindref="member">WriteError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0ul;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>preWritePos<sp/>=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.tellp();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.write(source,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamsize</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>postWritePos<sp/>=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.tellp();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1adaa88ae7c4bbeda319710963adc81ce8" kindref="member">WriteError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a80e65d12e393b02062f876f2f203841f" kindref="member">fileSize</ref><sp/>=<sp/>std::max(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(postWritePos),<sp/><ref refid="classtrio_1_1FileStreamImpl_1a80e65d12e393b02062f876f2f203841f" kindref="member">fileSize</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(postWritePos<sp/>&gt;<sp/>preWritePos<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(postWritePos<sp/>-<sp/>preWritePos)<sp/>:<sp/>0ul);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classtrio_1_1FileStreamImpl_1a876dfedc5ad235e338e53b6ab80d087d" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classtrio_1_1FileStreamImpl_1a21553243d67bcf7b017a24d71820c9fb" kindref="member">FileStreamImpl::write</ref>(<ref refid="classtrio_1_1Readable" kindref="compound">Readable</ref>*<sp/>source,<sp/>std::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((source<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.fail()<sp/>||<sp/>!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.is_open()<sp/>||<sp/>!<ref refid="namespacetrio_1a4a9deb5723842416dbadbb9f84554049" kindref="member">contains</ref>(<ref refid="classtrio_1_1FileStreamImpl_1af591e812e9dad5600be7c132c9f7abeb" kindref="member">fileAccessMode</ref>,<sp/><ref refid="namespacetrio_1a4b77aebe484e434a3112e66b70acd116a1129c0e4d43f2d121652a7302712cff6" kindref="member">AccessMode::Write</ref>))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1adaa88ae7c4bbeda319710963adc81ce8" kindref="member">WriteError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0ul;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>preWritePos<sp/>=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.tellp();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref><sp/>&gt;<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;<ref refid="classtrio_1_1Readable_1a134ad61b17c812f7aa2d912fc96d36f9" kindref="member">read</ref>(buffer,<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.write(buffer,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamsize</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref><sp/>-=<sp/><ref refid="namespacetrio_1_1anonymous__namespace_02FileStreamImpl_8cpp_03_1a6c0884d13cc39d78a7b57aaa3c8cfe49" kindref="member">bufferSize</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>source-&gt;<ref refid="classtrio_1_1Readable_1a134ad61b17c812f7aa2d912fc96d36f9" kindref="member">read</ref>(buffer,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.write(buffer,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamsize</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>postWritePos<sp/>=<sp/><ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.tellp();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtrio_1_1FileStreamImpl_1a1eae9ba35342b17b9653961060afcd3f" kindref="member">file</ref>.good())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1aef2982a7c16c85b76f49b5b6daabebae" kindref="member">status</ref>-&gt;<ref refid="classsc_1_1StatusProvider_1a0894ef1ff8f81599f9becda261abd4a8" kindref="member">set</ref>(<ref refid="classtrio_1_1BoundedIOStream_1adaa88ae7c4bbeda319710963adc81ce8" kindref="member">WriteError</ref>,<sp/><ref refid="classtrio_1_1FileStreamImpl_1a0d550c09b548f308da42424c369b477d" kindref="member">filePath</ref>.c_str());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtrio_1_1FileStreamImpl_1a80e65d12e393b02062f876f2f203841f" kindref="member">fileSize</ref><sp/>=<sp/>std::max(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(postWritePos),<sp/><ref refid="classtrio_1_1FileStreamImpl_1a80e65d12e393b02062f876f2f203841f" kindref="member">fileSize</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(postWritePos<sp/>&gt;<sp/>preWritePos<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(postWritePos<sp/>-<sp/>preWritePos)<sp/>:<sp/>0ul);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" refkind="member"><highlight class="normal">std::uint64_t<sp/><ref refid="classtrio_1_1FileStreamImpl_1a886f87940390609350ebac7d3e34e225" kindref="member">FileStreamImpl::size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtrio_1_1FileStreamImpl_1a80e65d12e393b02062f876f2f203841f" kindref="member">fileSize</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classtrio_1_1FileStreamImpl_1a3e2cde283da92d981e698b4bd362ddea" refkind="member"><highlight class="normal"><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/><ref refid="classtrio_1_1FileStreamImpl_1a3e2cde283da92d981e698b4bd362ddea" kindref="member">FileStreamImpl::getMemoryResource</ref>()<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtrio_1_1FileStreamImpl_1a18054e12a142178b3e27568e1423e29e" kindref="member">memRes</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>trio</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/trio/streams/FileStreamImpl.cpp"/>
  </compounddef>
</doxygen>
