<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="PolyAllocator_8h" kind="file" language="C++">
    <compoundname>PolyAllocator.h</compoundname>
    <includes refid="MemoryResource_8h" local="yes">pma/MemoryResource.h</includes>
    <includes refid="DefaultMemoryResource_8h" local="yes">pma/resources/DefaultMemoryResource.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">memory</includes>
    <includes local="no">scoped_allocator</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includedby refid="FileStreamImpl_8cpp" local="no">FileStreamImpl.cpp</includedby>
    <includedby refid="ManagedInstance_8h" local="yes">ManagedInstance.h</includedby>
    <includedby refid="MemoryMappedFileStream_8cpp" local="no">MemoryMappedFileStream.cpp</includedby>
    <includedby refid="MemoryStreamImpl_8cpp" local="no">MemoryStreamImpl.cpp</includedby>
    <includedby refid="include_2pma_2TypeDefs_8h" local="yes">TypeDefs.h</includedby>
    <includedby refid="src_2dna_2TypeDefs_8h" local="no">TypeDefs.h</includedby>
    <includedby refid="src_2dnacalib_2TypeDefs_8h" local="no">TypeDefs.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>pma/Defs.h</label>
        <link refid="pma_2Defs_8h"/>
      </node>
      <node id="2">
        <label>pma/MemoryResource.h</label>
        <link refid="MemoryResource_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>PolyAllocator.h</label>
        <link refid="PolyAllocator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>pma/resources/DefaultMemoryResource.h</label>
        <link refid="DefaultMemoryResource_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cassert</label>
      </node>
      <node id="4">
        <label>cstddef</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="8">
        <label>scoped_allocator</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>PolyAllocator.h</label>
        <link refid="PolyAllocator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>TypeDefs.h</label>
        <link refid="include_2pma_2TypeDefs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ManagedInstance.h</label>
        <link refid="ManagedInstance_8h"/>
      </node>
      <node id="21">
        <label>DNA.h</label>
        <link refid="dna_2DNA_8h"/>
      </node>
      <node id="29">
        <label>LODConstraint.h</label>
        <link refid="dna_2LODConstraint_8h"/>
      </node>
      <node id="30">
        <label>LODMapping.cpp</label>
        <link refid="dna_2LODMapping_8cpp"/>
      </node>
      <node id="31">
        <label>LODMapping.h</label>
        <link refid="dna_2LODMapping_8h"/>
      </node>
      <node id="34">
        <label>ReaderImpl.h</label>
        <link refid="dna_2ReaderImpl_8h"/>
      </node>
      <node id="36">
        <label>SurjectiveMapping.h</label>
        <link refid="dna_2SurjectiveMapping_8h"/>
      </node>
      <node id="13">
        <label>TypeDefs.h</label>
        <link refid="src_2dna_2TypeDefs_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Writer.cpp</label>
        <link refid="Writer_8cpp"/>
      </node>
      <node id="38">
        <label>WriterImpl.h</label>
        <link refid="dna_2WriterImpl_8h"/>
      </node>
      <node id="14">
        <label>AnimatedMapFilter.cpp</label>
        <link refid="filters_2AnimatedMapFilter_8cpp"/>
      </node>
      <node id="15">
        <label>AnimatedMapFilter.h</label>
        <link refid="filters_2AnimatedMapFilter_8h"/>
      </node>
      <node id="19">
        <label>BlendShapeFilter.cpp</label>
        <link refid="filters_2BlendShapeFilter_8cpp"/>
      </node>
      <node id="20">
        <label>BlendShapeFilter.h</label>
        <link refid="filters_2BlendShapeFilter_8h"/>
      </node>
      <node id="27">
        <label>JointFilter.cpp</label>
        <link refid="filters_2JointFilter_8cpp"/>
      </node>
      <node id="28">
        <label>JointFilter.h</label>
        <link refid="filters_2JointFilter_8h"/>
      </node>
      <node id="32">
        <label>MeshFilter.cpp</label>
        <link refid="filters_2MeshFilter_8cpp"/>
      </node>
      <node id="33">
        <label>MeshFilter.h</label>
        <link refid="filters_2MeshFilter_8h"/>
      </node>
      <node id="35">
        <label>Remap.h</label>
        <link refid="filters_2Remap_8h"/>
      </node>
      <node id="16">
        <label>BinaryStreamReaderImpl.cpp</label>
        <link refid="BinaryStreamReaderImpl_8cpp"/>
      </node>
      <node id="17">
        <label>BinaryStreamReaderImpl.h</label>
        <link refid="BinaryStreamReaderImpl_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>BinaryStreamWriterImpl.cpp</label>
        <link refid="BinaryStreamWriterImpl_8cpp"/>
      </node>
      <node id="22">
        <label>FilteredInputArchive.cpp</label>
        <link refid="FilteredInputArchive_8cpp"/>
      </node>
      <node id="23">
        <label>FilteredInputArchive.h</label>
        <link refid="FilteredInputArchive_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>JSONStreamReaderImpl.cpp</label>
        <link refid="JSONStreamReaderImpl_8cpp"/>
      </node>
      <node id="25">
        <label>JSONStreamReaderImpl.h</label>
        <link refid="JSONStreamReaderImpl_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>JSONStreamWriterImpl.cpp</label>
        <link refid="JSONStreamWriterImpl_8cpp"/>
      </node>
      <node id="50">
        <label>CommandImplBase.h</label>
        <link refid="CommandImplBase_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>TypeDefs.h</label>
        <link refid="src_2dnacalib_2TypeDefs_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>CalculateMeshLowerLODsCommand.cpp</label>
        <link refid="CalculateMeshLowerLODsCommand_8cpp"/>
      </node>
      <node id="51">
        <label>ClearBlendShapesCommand.cpp</label>
        <link refid="ClearBlendShapesCommand_8cpp"/>
      </node>
      <node id="52">
        <label>CommandSequence.cpp</label>
        <link refid="src_2dnacalib_2commands_2CommandSequence_8cpp"/>
      </node>
      <node id="53">
        <label>PruneBlendShapeTargetsCommand.cpp</label>
        <link refid="PruneBlendShapeTargetsCommand_8cpp"/>
      </node>
      <node id="54">
        <label>RemoveJointAnimationCommand.cpp</label>
        <link refid="RemoveJointAnimationCommand_8cpp"/>
      </node>
      <node id="55">
        <label>RemoveJointCommand.cpp</label>
        <link refid="RemoveJointCommand_8cpp"/>
      </node>
      <node id="56">
        <label>RemoveMeshCommand.cpp</label>
        <link refid="RemoveMeshCommand_8cpp"/>
      </node>
      <node id="58">
        <label>RenameAnimatedMapCommand.cpp</label>
        <link refid="RenameAnimatedMapCommand_8cpp"/>
      </node>
      <node id="59">
        <label>RenameBlendShapeCommand.cpp</label>
        <link refid="RenameBlendShapeCommand_8cpp"/>
      </node>
      <node id="60">
        <label>RenameJointCommand.cpp</label>
        <link refid="RenameJointCommand_8cpp"/>
      </node>
      <node id="61">
        <label>RenameMeshCommand.cpp</label>
        <link refid="RenameMeshCommand_8cpp"/>
      </node>
      <node id="57">
        <label>RenameResourceCommand.h</label>
        <link refid="RenameResourceCommand_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>RotateCommand.cpp</label>
        <link refid="RotateCommand_8cpp"/>
      </node>
      <node id="62">
        <label>ScaleCommand.cpp</label>
        <link refid="ScaleCommand_8cpp"/>
      </node>
      <node id="63">
        <label>SetBlendShapeTargetDeltasCommand.cpp</label>
        <link refid="SetBlendShapeTargetDeltasCommand_8cpp"/>
      </node>
      <node id="64">
        <label>SetLODsCommand.cpp</label>
        <link refid="SetLODsCommand_8cpp"/>
      </node>
      <node id="65">
        <label>SetNeutralJointRotationsCommand.cpp</label>
        <link refid="SetNeutralJointRotationsCommand_8cpp"/>
      </node>
      <node id="66">
        <label>SetNeutralJointTranslationsCommand.cpp</label>
        <link refid="SetNeutralJointTranslationsCommand_8cpp"/>
      </node>
      <node id="67">
        <label>SetSkinWeightsCommand.cpp</label>
        <link refid="SetSkinWeightsCommand_8cpp"/>
      </node>
      <node id="68">
        <label>SetVertexPositionsCommand.cpp</label>
        <link refid="SetVertexPositionsCommand_8cpp"/>
      </node>
      <node id="86">
        <label>SupportFactories.h</label>
        <link refid="SupportFactories_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>TranslateCommand.cpp</label>
        <link refid="TranslateCommand_8cpp"/>
      </node>
      <node id="71">
        <label>BaseImpl.h</label>
        <link refid="dnacalib_2dna_2BaseImpl_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>DNA.h</label>
        <link refid="dnacalib_2dna_2DNA_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>DNACalibDNAReaderImpl.cpp</label>
        <link refid="DNACalibDNAReaderImpl_8cpp"/>
      </node>
      <node id="73">
        <label>DNACalibDNAReaderImpl.h</label>
        <link refid="DNACalibDNAReaderImpl_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>DenormalizedData.h</label>
        <link refid="dnacalib_2dna_2DenormalizedData_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>LODConstraint.cpp</label>
        <link refid="dnacalib_2dna_2LODConstraint_8cpp"/>
      </node>
      <node id="79">
        <label>LODConstraint.h</label>
        <link refid="dnacalib_2dna_2LODConstraint_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>LODMapping.cpp</label>
        <link refid="dnacalib_2dna_2LODMapping_8cpp"/>
      </node>
      <node id="82">
        <label>LODMapping.h</label>
        <link refid="dnacalib_2dna_2LODMapping_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>ReaderImpl.h</label>
        <link refid="dnacalib_2dna_2ReaderImpl_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>SurjectiveMapping.h</label>
        <link refid="dnacalib_2dna_2SurjectiveMapping_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>WriterImpl.h</label>
        <link refid="dnacalib_2dna_2WriterImpl_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>AnimatedMapFilter.cpp</label>
        <link refid="alib_2dna_2filters_2AnimatedMapFilter_8cpp"/>
      </node>
      <node id="43">
        <label>AnimatedMapFilter.h</label>
        <link refid="alib_2dna_2filters_2AnimatedMapFilter_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>BlendShapeFilter.cpp</label>
        <link refid="alib_2dna_2filters_2BlendShapeFilter_8cpp"/>
      </node>
      <node id="45">
        <label>BlendShapeFilter.h</label>
        <link refid="alib_2dna_2filters_2BlendShapeFilter_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>JointFilter.cpp</label>
        <link refid="alib_2dna_2filters_2JointFilter_8cpp"/>
      </node>
      <node id="78">
        <label>JointFilter.h</label>
        <link refid="alib_2dna_2filters_2JointFilter_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>MeshFilter.cpp</label>
        <link refid="alib_2dna_2filters_2MeshFilter_8cpp"/>
      </node>
      <node id="84">
        <label>MeshFilter.h</label>
        <link refid="alib_2dna_2filters_2MeshFilter_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>Remap.h</label>
        <link refid="alib_2dna_2filters_2Remap_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>BoundingBox.h</label>
        <link refid="BoundingBox_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>Triangle.cpp</label>
        <link refid="Triangle_8cpp"/>
      </node>
      <node id="88">
        <label>Triangle.h</label>
        <link refid="Triangle_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>UVBarycentricMapping.cpp</label>
        <link refid="UVBarycentricMapping_8cpp"/>
      </node>
      <node id="47">
        <label>UVBarycentricMapping.h</label>
        <link refid="UVBarycentricMapping_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Algorithm.h</label>
        <link refid="Algorithm_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ArenaMemoryResource.cpp</label>
        <link refid="ArenaMemoryResource_8cpp"/>
      </node>
      <node id="2">
        <label>FileStreamImpl.cpp</label>
        <link refid="FileStreamImpl_8cpp"/>
      </node>
      <node id="8">
        <label>FileStreamImpl.h</label>
        <link refid="FileStreamImpl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>MemoryMappedFileStream.cpp</label>
        <link refid="MemoryMappedFileStream_8cpp"/>
      </node>
      <node id="10">
        <label>MemoryMappedFileStreamFallback.cpp</label>
        <link refid="MemoryMappedFileStreamFallback_8cpp"/>
      </node>
      <node id="9">
        <label>MemoryMappedFileStreamFallback.h</label>
        <link refid="MemoryMappedFileStreamFallback_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>MemoryStreamImpl.cpp</label>
        <link refid="MemoryStreamImpl_8cpp"/>
      </node>
      <node id="11">
        <label>MemoryStreamImpl.h</label>
        <link refid="MemoryStreamImpl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>NativeString.h</label>
        <link refid="NativeString_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpma_1_1impl_1_1max__align__of" prot="public">pma::impl::max_align_of</innerclass>
    <innerclass refid="classpma_1_1impl_1_1PolyAllocator" prot="public">pma::impl::PolyAllocator</innerclass>
    <innerclass refid="classpma_1_1PolyAllocator" prot="public">pma::PolyAllocator</innerclass>
    <innerclass refid="structpma_1_1PolyAllocator_1_1rebind" prot="public">pma::PolyAllocator::rebind</innerclass>
    <innernamespace refid="namespacepma">pma</innernamespace>
    <innernamespace refid="namespacepma_1_1impl">pma::impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MemoryResource_8h" kindref="compound">pma/MemoryResource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DefaultMemoryResource_8h" kindref="compound">pma/resources/DefaultMemoryResource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(disable<sp/>:<sp/>4365<sp/>4987)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scoped_allocator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>warning(disable<sp/>:<sp/>4068)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepma" kindref="compound">pma</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacepma_1_1impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">impl<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="28" refid="structpma_1_1impl_1_1max__align__of" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpma_1_1impl_1_1max__align__of" kindref="compound">max_align_of</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="structpma_1_1impl_1_1max__align__of_1af8a16646d4e2edab8592f678ba26bece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structpma_1_1impl_1_1max__align__of_1af8a16646d4e2edab8592f678ba26bece" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;(</highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(T)<sp/>&gt;<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(U)),<sp/>T,<sp/>U&gt;<ref refid="structpma_1_1impl_1_1max__align__of_1af8a16646d4e2edab8592f678ba26bece" kindref="member">::type</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Alignment,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="33" refid="classpma_1_1impl_1_1PolyAllocator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="36" refid="classpma_1_1impl_1_1PolyAllocator_1a11ee6fbcc2fa7627c65b9d0194f1f400" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1impl_1_1PolyAllocator_1a11ee6fbcc2fa7627c65b9d0194f1f400" kindref="member">traits_type</ref><sp/>=<sp/>std::allocator_traits&lt;PolyAllocator&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>UAlignment,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>UDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="39" refid="classpma_1_1impl_1_1PolyAllocator_1a0afa50d97b92eeacf594abfcd58bc512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classpma_1_1impl_1_1PolyAllocator_1a6b25053f40101b2d5316ad3b8c0c0be7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a6b25053f40101b2d5316ad3b8c0c0be7" kindref="member">PolyAllocator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wexit-time-destructors&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TDefaultMemoryResource<sp/>dmr;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref><sp/>=<sp/>&amp;dmr;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classpma_1_1impl_1_1PolyAllocator_1ae6797a3da3bd5b634547714a7cdb1a35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1ae6797a3da3bd5b634547714a7cdb1a35" kindref="member">PolyAllocator</ref>(<ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>memRes)<sp/>:<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>{}<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memRes<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref><sp/>=<sp/>memRes;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classpma_1_1impl_1_1PolyAllocator_1a7fe9682580f181410e2f4a342ada8710" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a7fe9682580f181410e2f4a342ada8710" kindref="member">PolyAllocator</ref>(std::nullptr_t<sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>{}<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>UAlignment,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>UDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="64" refid="classpma_1_1impl_1_1PolyAllocator_1a100cba8ca392bf5dfcbce53e5a10297a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a100cba8ca392bf5dfcbce53e5a10297a" kindref="member">PolyAllocator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;U, UAlignment, UDefaultMemoryResource&gt;</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref>{rhs.<ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref>}<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" kindref="member">allocateBytes</ref>(std::size_t<sp/>size,<sp/>std::size_t<sp/>alignment<sp/>=<sp/>Alignment)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref>-&gt;<ref refid="classpma_1_1MemoryResource_1ad43f9c740450042025424135a15497bc" kindref="member">allocate</ref>(size,<sp/>alignment);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" kindref="member">deallocateBytes</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/>std::size_t<sp/>size,<sp/>std::size_t<sp/>alignment<sp/>=<sp/>Alignment)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref>-&gt;<ref refid="classpma_1_1MemoryResource_1ae775e6f871764336db8dc4d95ba95b2b" kindref="member">deallocate</ref>(ptr,<sp/>size,<sp/>alignment);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>value_type&gt;</highlight></codeline>
<codeline lineno="76" refid="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!std::is_void&lt;U&gt;::value,<sp/>U*&gt;::type<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" kindref="member">allocateObject</ref>(std::size_t<sp/>count,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>alignment<sp/>=<sp/>Alignment)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">U*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classpma_1_1impl_1_1PolyAllocator_1a796f545108a3048f039f65c388f2eeef" kindref="member">allocateBytes</ref>(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U),<sp/>alignment));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>value_type&gt;</highlight></codeline>
<codeline lineno="82" refid="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!std::is_void&lt;U&gt;::value&gt;::type<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" kindref="member">deallocateObject</ref>(U*<sp/>ptr,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>count,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>alignment<sp/>=<sp/>Alignment)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a7441db0eab429db0e822d7c3244cac98" kindref="member">deallocateBytes</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr),<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U),<sp/>alignment);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="89" refid="classpma_1_1impl_1_1PolyAllocator_1af6623d1adb7eec221a20670e78c4420f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U*<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1af6623d1adb7eec221a20670e78c4420f" kindref="member">newObject</ref>(Args&amp;&amp;<sp/>...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>traits_type::allocate(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>1ul);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits_type::construct(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ptr,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>value_type&gt;</highlight></codeline>
<codeline lineno="97" refid="classpma_1_1impl_1_1PolyAllocator_1a0fc0b96949552d219088199183db5132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a0fc0b96949552d219088199183db5132" kindref="member">deleteObject</ref>(U*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits_type::destroy(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ptr);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits_type::deallocate(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ptr,<sp/>1ul);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocation<sp/>function<sp/>as<sp/>requested<sp/>by<sp/>standard-library<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classpma_1_1impl_1_1PolyAllocator_1a0dc4f678265840efa81cce7264646294" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref>*<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a0dc4f678265840efa81cce7264646294" kindref="member">allocate</ref>(std::size_t<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a641c7a0a1cfdd83412791704546aa08d" kindref="member">allocateObject</ref>(count);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deallocation<sp/>function<sp/>as<sp/>requested<sp/>by<sp/>standard-library<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classpma_1_1impl_1_1PolyAllocator_1af3176568a7b19da07996a7dd8927b4ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1af3176568a7b19da07996a7dd8927b4ab" kindref="member">deallocate</ref>(<ref refid="classpma_1_1impl_1_1PolyAllocator_1a011531fce3b276a2f61d96685004d2fb" kindref="member">value_type</ref>*<sp/>ptr,<sp/>std::size_t<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a33309c897ea6457c7c90ca08427dc818" kindref="member">deallocateObject</ref>(ptr,<sp/>count);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classpma_1_1impl_1_1PolyAllocator_1af6ef121ec36013e5f6086620b511f1ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1af6ef121ec36013e5f6086620b511f1ed" kindref="member">getAlignment</ref>()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Alignment;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classpma_1_1impl_1_1PolyAllocator_1ad984513f679866a6f166742aa85bfc71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1ad984513f679866a6f166742aa85bfc71" kindref="member">getMemoryResource</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121" refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator_1a88baca93f7e0bbeb33461e765c718edf" kindref="member">pMemRes</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>Alignment<sp/>=<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structpma_1_1impl_1_1max__align__of_1af8a16646d4e2edab8592f678ba26bece" kindref="member">impl::max_align_of&lt;T, std::max_align_t&gt;::type</ref>),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TDefaultMemoryResource<sp/>=<sp/><ref refid="classpma_1_1DefaultMemoryResource" kindref="compound">DefaultMemoryResource</ref>&gt;</highlight></codeline>
<codeline lineno="129" refid="classpma_1_1PolyAllocator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::scoped_allocator_adaptor&lt;<ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">impl::PolyAllocator&lt;T, Alignment, TDefaultMemoryResource&gt;</ref><sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="classpma_1_1PolyAllocator_1a8bca1e600108bbbda33649964b423179" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">Impl</ref><sp/>=<sp/><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">impl::PolyAllocator&lt;T, Alignment, TDefaultMemoryResource&gt;</ref>;</highlight></codeline>
<codeline lineno="132" refid="classpma_1_1PolyAllocator_1a6e50322470552e25a646ccd8da063b5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1PolyAllocator_1a6e50322470552e25a646ccd8da063b5e" kindref="member">Base</ref><sp/>=<sp/>std::scoped_allocator_adaptor&lt;Impl&gt;;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="136" refid="structpma_1_1PolyAllocator_1_1rebind" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpma_1_1PolyAllocator_1_1rebind" kindref="compound">rebind</ref><sp/>{</highlight></codeline>
<codeline lineno="137" refid="structpma_1_1PolyAllocator_1_1rebind_1a3e74a3b4c2ae7168926877a25ea9df6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classpma_1_1PolyAllocator" kindref="compound">other</ref><sp/>=<sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;U, Alignment, TDefaultMemoryResource&gt;</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classpma_1_1PolyAllocator_1a63c41babbf419ea9a561c4498f2904d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator_1a63c41babbf419ea9a561c4498f2904d3" kindref="member">PolyAllocator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classpma_1_1PolyAllocator_1a0ffc31aef4473de3861de522063f8d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator_1a0ffc31aef4473de3861de522063f8d65" kindref="member">PolyAllocator</ref>(<ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref>*<sp/>memRes)<sp/>:<sp/><ref refid="classpma_1_1PolyAllocator_1a6e50322470552e25a646ccd8da063b5e" kindref="member">Base</ref>{<ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">Impl</ref>{memRes}}<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>UAlignment,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>UDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="146" refid="classpma_1_1PolyAllocator_1a1988be0448525cb6986718a612ffe30d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator_1a1988be0448525cb6986718a612ffe30d" kindref="member">PolyAllocator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;U, UAlignment, UDefaultMemoryResource&gt;</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="classpma_1_1PolyAllocator_1a6e50322470552e25a646ccd8da063b5e" kindref="member">Base</ref>{rhs}<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>UAlignment,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>UDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="150" refid="classpma_1_1PolyAllocator_1a0b7178a7aa0bf4993a6718a09c6f6f4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpma_1_1PolyAllocator_1a0b7178a7aa0bf4993a6718a09c6f6f4e" kindref="member">PolyAllocator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1impl_1_1PolyAllocator" kindref="compound">impl::PolyAllocator&lt;U, UAlignment, UDefaultMemoryResource&gt;</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="classpma_1_1PolyAllocator_1a6e50322470552e25a646ccd8da063b5e" kindref="member">Base</ref>{rhs}<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::size_t<sp/>TAlignment,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TDefaultMemoryResource,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::size_t<sp/>UAlignment,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="157" refid="namespacepma_1a0f0cc320add70f5fb6af1d2683645e97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacepma_1a0f0cc320add70f5fb6af1d2683645e97" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;T, TAlignment, TDefaultMemoryResource&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>&lt;U,<sp/>UAlignment,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UDefaultMemoryResource&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TAlignment<sp/>==<sp/>UAlignment<sp/>&amp;&amp;<sp/>lhs.getMemoryResource()<sp/>==<sp/>rhs.getMemoryResource());</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::size_t<sp/>TAlignment,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TDefaultMemoryResource,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::size_t<sp/>UAlignment,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UDefaultMemoryResource&gt;</highlight></codeline>
<codeline lineno="165" refid="namespacepma_1a301b1b95dbf1313ab014aa4d93004f52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacepma_1a301b1b95dbf1313ab014aa4d93004f52" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator&lt;T, TAlignment, TDefaultMemoryResource&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>&lt;U,<sp/>UAlignment,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UDefaultMemoryResource&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pma</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/pma/PolyAllocator.h"/>
  </compounddef>
</doxygen>
