<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Vec_8h" kind="file" language="C++">
    <compoundname>Vec.h</compoundname>
    <includes refid="Types_8h" local="yes">tdm/Types.h</includes>
    <includedby refid="Computations_8h" local="yes">Computations.h</includedby>
    <includedby refid="Mat_8h" local="yes">Mat.h</includedby>
    <includedby refid="TDM_8h" local="yes">TDM.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>tdm/Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Vec.h</label>
        <link refid="Vec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15">
        <label>CommandImplBase.h</label>
        <link refid="CommandImplBase_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>TypeDefs.h</label>
        <link refid="src_2dnacalib_2TypeDefs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>CalculateMeshLowerLODsCommand.cpp</label>
        <link refid="CalculateMeshLowerLODsCommand_8cpp"/>
      </node>
      <node id="16">
        <label>ClearBlendShapesCommand.cpp</label>
        <link refid="ClearBlendShapesCommand_8cpp"/>
      </node>
      <node id="17">
        <label>CommandSequence.cpp</label>
        <link refid="src_2dnacalib_2commands_2CommandSequence_8cpp"/>
      </node>
      <node id="18">
        <label>PruneBlendShapeTargetsCommand.cpp</label>
        <link refid="PruneBlendShapeTargetsCommand_8cpp"/>
      </node>
      <node id="19">
        <label>RemoveJointAnimationCommand.cpp</label>
        <link refid="RemoveJointAnimationCommand_8cpp"/>
      </node>
      <node id="20">
        <label>RemoveJointCommand.cpp</label>
        <link refid="RemoveJointCommand_8cpp"/>
      </node>
      <node id="21">
        <label>RemoveMeshCommand.cpp</label>
        <link refid="RemoveMeshCommand_8cpp"/>
      </node>
      <node id="23">
        <label>RenameAnimatedMapCommand.cpp</label>
        <link refid="RenameAnimatedMapCommand_8cpp"/>
      </node>
      <node id="24">
        <label>RenameBlendShapeCommand.cpp</label>
        <link refid="RenameBlendShapeCommand_8cpp"/>
      </node>
      <node id="25">
        <label>RenameJointCommand.cpp</label>
        <link refid="RenameJointCommand_8cpp"/>
      </node>
      <node id="26">
        <label>RenameMeshCommand.cpp</label>
        <link refid="RenameMeshCommand_8cpp"/>
      </node>
      <node id="22">
        <label>RenameResourceCommand.h</label>
        <link refid="RenameResourceCommand_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>RotateCommand.cpp</label>
        <link refid="RotateCommand_8cpp"/>
      </node>
      <node id="27">
        <label>ScaleCommand.cpp</label>
        <link refid="ScaleCommand_8cpp"/>
      </node>
      <node id="28">
        <label>SetBlendShapeTargetDeltasCommand.cpp</label>
        <link refid="SetBlendShapeTargetDeltasCommand_8cpp"/>
      </node>
      <node id="29">
        <label>SetLODsCommand.cpp</label>
        <link refid="SetLODsCommand_8cpp"/>
      </node>
      <node id="30">
        <label>SetNeutralJointRotationsCommand.cpp</label>
        <link refid="SetNeutralJointRotationsCommand_8cpp"/>
      </node>
      <node id="31">
        <label>SetNeutralJointTranslationsCommand.cpp</label>
        <link refid="SetNeutralJointTranslationsCommand_8cpp"/>
      </node>
      <node id="32">
        <label>SetSkinWeightsCommand.cpp</label>
        <link refid="SetSkinWeightsCommand_8cpp"/>
      </node>
      <node id="33">
        <label>SetVertexPositionsCommand.cpp</label>
        <link refid="SetVertexPositionsCommand_8cpp"/>
      </node>
      <node id="51">
        <label>SupportFactories.h</label>
        <link refid="SupportFactories_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>TranslateCommand.cpp</label>
        <link refid="TranslateCommand_8cpp"/>
      </node>
      <node id="36">
        <label>BaseImpl.h</label>
        <link refid="dnacalib_2dna_2BaseImpl_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>DNA.h</label>
        <link refid="dnacalib_2dna_2DNA_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>DNACalibDNAReaderImpl.cpp</label>
        <link refid="DNACalibDNAReaderImpl_8cpp"/>
      </node>
      <node id="38">
        <label>DNACalibDNAReaderImpl.h</label>
        <link refid="DNACalibDNAReaderImpl_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>DenormalizedData.h</label>
        <link refid="dnacalib_2dna_2DenormalizedData_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>LODConstraint.cpp</label>
        <link refid="dnacalib_2dna_2LODConstraint_8cpp"/>
      </node>
      <node id="44">
        <label>LODConstraint.h</label>
        <link refid="dnacalib_2dna_2LODConstraint_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>LODMapping.cpp</label>
        <link refid="dnacalib_2dna_2LODMapping_8cpp"/>
      </node>
      <node id="47">
        <label>LODMapping.h</label>
        <link refid="dnacalib_2dna_2LODMapping_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ReaderImpl.h</label>
        <link refid="dnacalib_2dna_2ReaderImpl_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>SurjectiveMapping.h</label>
        <link refid="dnacalib_2dna_2SurjectiveMapping_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>WriterImpl.h</label>
        <link refid="dnacalib_2dna_2WriterImpl_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>AnimatedMapFilter.cpp</label>
        <link refid="alib_2dna_2filters_2AnimatedMapFilter_8cpp"/>
      </node>
      <node id="8">
        <label>AnimatedMapFilter.h</label>
        <link refid="alib_2dna_2filters_2AnimatedMapFilter_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>BlendShapeFilter.cpp</label>
        <link refid="alib_2dna_2filters_2BlendShapeFilter_8cpp"/>
      </node>
      <node id="10">
        <label>BlendShapeFilter.h</label>
        <link refid="alib_2dna_2filters_2BlendShapeFilter_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>JointFilter.cpp</label>
        <link refid="alib_2dna_2filters_2JointFilter_8cpp"/>
      </node>
      <node id="43">
        <label>JointFilter.h</label>
        <link refid="alib_2dna_2filters_2JointFilter_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>MeshFilter.cpp</label>
        <link refid="alib_2dna_2filters_2MeshFilter_8cpp"/>
      </node>
      <node id="49">
        <label>MeshFilter.h</label>
        <link refid="alib_2dna_2filters_2MeshFilter_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>Remap.h</label>
        <link refid="alib_2dna_2filters_2Remap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>BoundingBox.h</label>
        <link refid="BoundingBox_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>Triangle.cpp</label>
        <link refid="Triangle_8cpp"/>
      </node>
      <node id="53">
        <label>Triangle.h</label>
        <link refid="Triangle_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>UVBarycentricMapping.cpp</label>
        <link refid="UVBarycentricMapping_8cpp"/>
      </node>
      <node id="12">
        <label>UVBarycentricMapping.h</label>
        <link refid="UVBarycentricMapping_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Algorithm.h</label>
        <link refid="Algorithm_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Computations.h</label>
        <link refid="Computations_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>Mat.h</label>
        <link refid="Mat_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TDM.h</label>
        <link refid="TDM_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>Transforms.h</label>
        <link refid="Transforms_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Vec.h</label>
        <link refid="Vec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtdm_1_1vec" prot="public">tdm::vec</innerclass>
    <innernamespace refid="namespacetdm">tdm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Types_8h" kindref="compound">tdm/Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetdm" kindref="compound">tdm</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="10" refid="structtdm_1_1vec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtdm_1_1vec" kindref="compound">vec</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="structtdm_1_1vec_1a301713df61d6cf90bfb79fdbc023b301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structtdm_1_1vec_1a301713df61d6cf90bfb79fdbc023b301" kindref="member">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1a301713df61d6cf90bfb79fdbc023b301" kindref="member">value_type</ref><sp/><ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>[L];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structtdm_1_1vec_1ab5f3e6be87ab1a776b2aac23d160f17b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1ab5f3e6be87ab1a776b2aac23d160f17b" kindref="member">vec</ref>()<sp/>:<sp/><ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>{}<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structtdm_1_1vec_1ac55548674d772fd950d3c2fd746a9b2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1ac55548674d772fd950d3c2fd746a9b2d" kindref="member">~vec</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structtdm_1_1vec_1a64050ddd2e8b50e932a815b238d2c655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1a64050ddd2e8b50e932a815b238d2c655" kindref="member">vec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25" refid="structtdm_1_1vec_1ab870d46be155fb8b071430db1071812a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1ab870d46be155fb8b071430db1071812a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structtdm_1_1vec_1a83a74f4850a92f6d29460f5ccaf2aaae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1a83a74f4850a92f6d29460f5ccaf2aaae" kindref="member">vec</ref>(<ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28" refid="structtdm_1_1vec_1a4d39a7b328ac8be09246cdd62ba80b1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a4d39a7b328ac8be09246cdd62ba80b1e" kindref="member">operator=</ref>(<ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="31" refid="structtdm_1_1vec_1af4025f0bd01a2b3820b6f0f0484e7ba9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1af4025f0bd01a2b3820b6f0f0484e7ba9" kindref="member">vec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceextd_1a12ea8bc7218925e96a95740ba8110da2" kindref="member">std::copy</ref>(std::begin(rhs.<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>),<sp/>std::end(rhs.<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>),<sp/>std::begin(<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="36" refid="structtdm_1_1vec_1a99bbca4341a572e21d0aab1136cf521c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a99bbca4341a572e21d0aab1136cf521c" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceextd_1a12ea8bc7218925e96a95740ba8110da2" kindref="member">std::copy</ref>(std::begin(rhs.<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>),<sp/>std::end(rhs.<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>),<sp/>std::begin(<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Vs,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Vs)<sp/>==<sp/>L)<sp/>||<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Vs)<sp/>==<sp/>0)&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="42" refid="structtdm_1_1vec_1a0939630b025b4bc5b53e28cd5c2c0711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1a0939630b025b4bc5b53e28cd5c2c0711" kindref="member">vec</ref>(Vs...<sp/>vs)<sp/>:<sp/><ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>{vs<sp/>...}<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_convertible&lt;U,<sp/>T&gt;::value<sp/>&amp;&amp;<sp/>(L<sp/>&gt;<sp/>1)&gt;::type<sp/>*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="46" refid="structtdm_1_1vec_1a93c3f4489986c01d3f3d30301e113bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a93c3f4489986c01d3f3d30301e113bc3" kindref="member">vec</ref>(U<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill_n(<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>,<sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>(),<sp/>v);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_convertible&lt;U,<sp/>T&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="51" refid="structtdm_1_1vec_1a2fd16a4802058c7553f55bcb85ea8501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a2fd16a4802058c7553f55bcb85ea8501" kindref="member">vec</ref>(U*<sp/>pv)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_n(pv,<sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>(),<sp/>std::begin(<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structtdm_1_1vec_1a4122ef40de0fb0de5b10be4c4dda9d48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="structtdm_1_1vec_1a4122ef40de0fb0de5b10be4c4dda9d48" kindref="member">operator[]</ref>(<ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(index<sp/>&lt;<sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>[index];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structtdm_1_1vec_1af6f4453bd360fa14f7026e45b477a3d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="structtdm_1_1vec_1af6f4453bd360fa14f7026e45b477a3d5" kindref="member">operator[]</ref>(<ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(index<sp/>&lt;<sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>[index];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vectorized;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="68" refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>(F<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i{};<sp/>i<sp/>&lt;<sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func(<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>[i],<sp/>i);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="76" refid="structtdm_1_1vec_1a9926db83a5e120ad9a47ce6146463381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a9926db83a5e120ad9a47ce6146463381" kindref="member">apply</ref>(F<sp/>func)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i{};<sp/>i<sp/>&lt;<sp/><ref refid="structtdm_1_1vec_1a0124146b684564619f7af68b70f982ec" kindref="member">dimensions</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func(<ref refid="structtdm_1_1vec_1af9d396c483d8377954799b5531b02735" kindref="member">values</ref>[i],<sp/>i);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structtdm_1_1vec_1a7d3b53b6afe5f7bca210b84ca2dae780" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a7d3b53b6afe5f7bca210b84ca2dae780" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++v;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structtdm_1_1vec_1a4b18a2455e9665c7d32af2619245bb45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a4b18a2455e9665c7d32af2619245bb45" kindref="member">operator--</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--v;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="96" refid="structtdm_1_1vec_1ae6d7c5dc146045c9ec75531daa6ef10d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1ae6d7c5dc146045c9ec75531daa6ef10d" kindref="member">operator+=</ref>(U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="103" refid="structtdm_1_1vec_1a6f98689092b25d5ff7a5477ee5b513d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a6f98689092b25d5ff7a5477ee5b513d9" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([&amp;rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structtdm_1_1vec_1af212414970511e401d353ad74eecbfe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1af212414970511e401d353ad74eecbfe0" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">+=&lt;T&gt;(rhs);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="114" refid="structtdm_1_1vec_1aa2d142ca47fadba4bb74d9f67fd2eedb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1aa2d142ca47fadba4bb74d9f67fd2eedb" kindref="member">operator-=</ref>(U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="121" refid="structtdm_1_1vec_1a46bd3081bbfc2086de647ba2537fde3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a46bd3081bbfc2086de647ba2537fde3d" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([&amp;rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>-=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structtdm_1_1vec_1a6a72fa6baceee668b21a5cde398b11e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a6a72fa6baceee668b21a5cde398b11e2" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">-=&lt;T&gt;(rhs);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="132" refid="structtdm_1_1vec_1aaef4aa9e7e0c676cb4b80489c7e2f1aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1aaef4aa9e7e0c676cb4b80489c7e2f1aa" kindref="member">operator*=</ref>(U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>*=<sp/>rhs;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="139" refid="structtdm_1_1vec_1a600c04f162446e8c609a87fd09ae8432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a600c04f162446e8c609a87fd09ae8432" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([&amp;rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>*=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structtdm_1_1vec_1a7337c6685b5db47374567bd10a4ad1d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a7337c6685b5db47374567bd10a4ad1d2" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">*=&lt;T&gt;(rhs);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="150" refid="structtdm_1_1vec_1a26e884fc6d44c248f8bfeeea5bcad158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a26e884fc6d44c248f8bfeeea5bcad158" kindref="member">operator/=</ref>(U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>/=<sp/>rhs;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="157" refid="structtdm_1_1vec_1a66ce768e9f0ed502f91b96746e2301dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a66ce768e9f0ed502f91b96746e2301dc" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([&amp;rhs](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>/=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="structtdm_1_1vec_1a145ca658cd48185f0742553c1662ee42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a145ca658cd48185f0742553c1662ee42" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">/=&lt;T&gt;(rhs);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="168" refid="structtdm_1_1vec_1a2b355427a69d56cf8a32539191d96c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_floating_point&lt;V&gt;::value,<sp/>V&gt;::type<sp/><ref refid="structtdm_1_1vec_1a2b355427a69d56cf8a32539191d96c93" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt((v<sp/>*<sp/>v).<ref refid="structtdm_1_1vec_1ae4027c4d7aa42fffc697b58137008fb7" kindref="member">sum</ref>());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="174" refid="structtdm_1_1vec_1acd44cca051bda523e42cbfcbd26f49c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_floating_point&lt;V&gt;::value,<sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;&gt;::type<sp/><ref refid="structtdm_1_1vec_1acd44cca051bda523e42cbfcbd26f49c9" kindref="member">normalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a26e884fc6d44c248f8bfeeea5bcad158" kindref="member">operator/=</ref>(<ref refid="structtdm_1_1vec_1a2b355427a69d56cf8a32539191d96c93" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structtdm_1_1vec_1a3f3ea73401edb017414292df5c64d4a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec</ref>&amp;<sp/><ref refid="structtdm_1_1vec_1a3f3ea73401edb017414292df5c64d4a8" kindref="member">negate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([](T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-v;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="structtdm_1_1vec_1ae4027c4d7aa42fffc697b58137008fb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structtdm_1_1vec_1ae4027c4d7aa42fffc697b58137008fb7" kindref="member">sum</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>retval{};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([&amp;retval](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/><sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>+=<sp/>v;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="195" refid="namespacetdm_1a05f811d3bc2aa12226f32a16bd59df7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetdm_1a96d97543e016a745e13fc5636da84e0f" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs.<ref refid="structtdm_1_1vec_1a127a38ee0747536a683201485e0d40c4" kindref="member">apply</ref>([&amp;equal,<sp/>&amp;rhs](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v,<sp/><ref refid="namespacetdm_1a644d3de5f1ca2eaa628196afcfbadef4" kindref="member">dim_t</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equal<sp/>=<sp/>equal<sp/>&amp;&amp;<sp/>(v<sp/>==<sp/>rhs[i]);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>equal;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="204" refid="namespacetdm_1a16ac9390c8ddf599cdd16c70834a883a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetdm_1a7bf82ae9ab894985d26c1beb49aad3b7" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="209" refid="namespacetdm_1ae8ffdd9f8fd168a7de79d1e785dd7789" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1aebd74509bbae3af7401d982589abd9a1" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="214" refid="namespacetdm_1acf53ae7eab8ff2f6aa02349020daf6fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1ac777140e095ad77e4731087a4bf25337" kindref="member">operator-</ref>(<ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.<ref refid="structtdm_1_1vec_1a3f3ea73401edb017414292df5c64d4a8" kindref="member">negate</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="219" refid="namespacetdm_1af6088bcd2d86ee9e651d11cb17fb111c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1aebd74509bbae3af7401d982589abd9a1" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="224" refid="namespacetdm_1a5b05b1f0617c6772e434356ee8543bce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1aebd74509bbae3af7401d982589abd9a1" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="229" refid="namespacetdm_1ae66b5b0ba2a8c0522dd2a95ccd4cbf90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1aebd74509bbae3af7401d982589abd9a1" kindref="member">operator+</ref>(T<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="234" refid="namespacetdm_1aa01033aeed7e1e35861941661f9ae8d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1ac777140e095ad77e4731087a4bf25337" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="239" refid="namespacetdm_1a37cdaf16a694f11bd8aed639f052e14f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1ac777140e095ad77e4731087a4bf25337" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="244" refid="namespacetdm_1a67e767b14f91dd4a4b31126fd3b0f798" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1ac777140e095ad77e4731087a4bf25337" kindref="member">operator-</ref>(T<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="249" refid="namespacetdm_1ad93285fd567280e6a7e66d5a70ba1510" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1abc80b4060c9aabf8bf3a5958dea64b1c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>*=<sp/>rhs;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="254" refid="namespacetdm_1a4adea190abd2fe6bebdf4ab56beda91e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_arithmetic&lt;U&gt;::value,<sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/>&gt;::type<sp/><ref refid="namespacetdm_1abc80b4060c9aabf8bf3a5958dea64b1c" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>*=<sp/>rhs;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="259" refid="namespacetdm_1af1583dd6dc471b02cda2a41329879151" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,<sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/>&gt;::type<sp/><ref refid="namespacetdm_1abc80b4060c9aabf8bf3a5958dea64b1c" kindref="member">operator*</ref>(T<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>*=<sp/>rhs;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="264" refid="namespacetdm_1a5e2f806de39275efd894f67c2c701b53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/><ref refid="namespacetdm_1ac00c97cdcd06c57c74cfc5a6121cef91" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>/=<sp/>rhs;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="269" refid="namespacetdm_1aab9963d576f52b93eb2d35ff0daa741a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_arithmetic&lt;U&gt;::value,<sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/>&gt;::type<sp/><ref refid="namespacetdm_1ac00c97cdcd06c57c74cfc5a6121cef91" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>&amp;<sp/>lhs,<sp/>U<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>/=<sp/>rhs;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;dim_t<sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="274" refid="namespacetdm_1a200a9434f704d37419f06b34041108af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,<sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref><sp/>&gt;::type<sp/><ref refid="namespacetdm_1ac00c97cdcd06c57c74cfc5a6121cef91" kindref="member">operator/</ref>(T<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, U&gt;</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtdm_1_1vec" kindref="compound">vec&lt;L, T&gt;</ref>(lhs)<sp/>/=<sp/>rhs;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tdm</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/src/tdm/Vec.h"/>
  </compounddef>
</doxygen>
