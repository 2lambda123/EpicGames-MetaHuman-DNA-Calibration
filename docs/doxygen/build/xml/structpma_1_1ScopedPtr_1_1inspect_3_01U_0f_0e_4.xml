<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4" kind="struct" language="C++" prot="private">
    <compoundname>pma::ScopedPtr::inspect&lt; U[]&gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename U</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1a1fd1e03602efd1c81552b3c5878aec82" prot="public" static="no">
        <type>U</type>
        <definition>using pma::ScopedPtr&lt; T, TDestroyer &gt;::inspect&lt; U[]&gt;::element_type =  U</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>pma::ScopedPtr::inspect&lt; U[]&gt;::element_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" line="127" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1a8d1e76d0254fa084a10da6a0db3d1004" prot="public" static="no">
        <type><ref refid="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1a1fd1e03602efd1c81552b3c5878aec82" kindref="member">element_type</ref> *</type>
        <definition>using pma::ScopedPtr&lt; T, TDestroyer &gt;::inspect&lt; U[]&gt;::pointer_type =  element_type *</definition>
        <argsstring></argsstring>
        <name>pointer_type</name>
        <qualifiedname>pma::ScopedPtr::inspect&lt; U[]&gt;::pointer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" line="128" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1addf3cf09337a87064e287733f5c03888" prot="public" static="no">
        <type>std::true_type</type>
        <definition>using pma::ScopedPtr&lt; T, TDestroyer &gt;::inspect&lt; U[]&gt;::is_array =  std::true_type</definition>
        <argsstring></argsstring>
        <name>is_array</name>
        <qualifiedname>pma::ScopedPtr::inspect&lt; U[]&gt;::is_array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" line="129" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>pma::ScopedPtr&lt; T, TDestroyer &gt;::inspect&lt; U[]&gt;</label>
        <link refid="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4"/>
      </node>
    </collaborationgraph>
    <location file="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" line="126" column="9" bodyfile="C:/source/MetaHuman-DNA-Calibration/dnacalib/DNACalib/include/pma/ScopedPtr.h" bodystart="126" bodyend="130"/>
    <listofallmembers>
      <member refid="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1a1fd1e03602efd1c81552b3c5878aec82" prot="public" virt="non-virtual"><scope>pma::ScopedPtr::inspect&lt; U[]&gt;</scope><name>element_type</name></member>
      <member refid="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1addf3cf09337a87064e287733f5c03888" prot="public" virt="non-virtual"><scope>pma::ScopedPtr::inspect&lt; U[]&gt;</scope><name>is_array</name></member>
      <member refid="structpma_1_1ScopedPtr_1_1inspect_3_01U_0f_0e_4_1a8d1e76d0254fa084a10da6a0db3d1004" prot="public" virt="non-virtual"><scope>pma::ScopedPtr::inspect&lt; U[]&gt;</scope><name>pointer_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
