<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacednac" kind="namespace" language="C++">
    <compoundname>dnac</compoundname>
    <innerclass refid="classdnac_1_1AnimatedMapFilter" prot="public">dnac::AnimatedMapFilter</innerclass>
    <innerclass refid="classdnac_1_1BaseImpl" prot="public">dnac::BaseImpl</innerclass>
    <innerclass refid="classdnac_1_1BlendShapeFilter" prot="public">dnac::BlendShapeFilter</innerclass>
    <innerclass refid="classdnac_1_1BoundingBox" prot="public">dnac::BoundingBox</innerclass>
    <innerclass refid="classdnac_1_1CalculateMeshLowerLODsCommand" prot="public">dnac::CalculateMeshLowerLODsCommand</innerclass>
    <innerclass refid="classdnac_1_1ClearBlendShapesCommand" prot="public">dnac::ClearBlendShapesCommand</innerclass>
    <innerclass refid="classdnac_1_1Command" prot="public">dnac::Command</innerclass>
    <innerclass refid="classdnac_1_1CommandImplBase" prot="public">dnac::CommandImplBase</innerclass>
    <innerclass refid="classdnac_1_1CommandSequence" prot="public">dnac::CommandSequence</innerclass>
    <innerclass refid="classdnac_1_1ConditionalCommand" prot="public">dnac::ConditionalCommand</innerclass>
    <innerclass refid="structdnac_1_1DenormalizedData" prot="public">dnac::DenormalizedData</innerclass>
    <innerclass refid="structdnac_1_1DNA" prot="public">dnac::DNA</innerclass>
    <innerclass refid="classdnac_1_1DNACalibDNAReader" prot="public">dnac::DNACalibDNAReader</innerclass>
    <innerclass refid="classdnac_1_1DNACalibDNAReaderImpl" prot="public">dnac::DNACalibDNAReaderImpl</innerclass>
    <innerclass refid="structdnac_1_1ExpectedValue" prot="public">dnac::ExpectedValue</innerclass>
    <innerclass refid="classdnac_1_1JointFilter" prot="public">dnac::JointFilter</innerclass>
    <innerclass refid="classdnac_1_1LODConstraint" prot="public">dnac::LODConstraint</innerclass>
    <innerclass refid="classdnac_1_1LODMapping" prot="public">dnac::LODMapping</innerclass>
    <innerclass refid="classdnac_1_1MeshFilter" prot="public">dnac::MeshFilter</innerclass>
    <innerclass refid="structdnac_1_1OperationFactory" prot="public">dnac::OperationFactory</innerclass>
    <innerclass refid="classdnac_1_1PruneBlendShapeTargetsCommand" prot="public">dnac::PruneBlendShapeTargetsCommand</innerclass>
    <innerclass refid="structdnac_1_1RawAnimatedMaps" prot="public">dnac::RawAnimatedMaps</innerclass>
    <innerclass refid="structdnac_1_1RawBehavior" prot="public">dnac::RawBehavior</innerclass>
    <innerclass refid="structdnac_1_1RawBlendShapeChannels" prot="public">dnac::RawBlendShapeChannels</innerclass>
    <innerclass refid="structdnac_1_1RawBlendShapeTarget" prot="public">dnac::RawBlendShapeTarget</innerclass>
    <innerclass refid="structdnac_1_1RawConditionalTable" prot="public">dnac::RawConditionalTable</innerclass>
    <innerclass refid="structdnac_1_1RawControls" prot="public">dnac::RawControls</innerclass>
    <innerclass refid="structdnac_1_1RawCoordinateSystem" prot="public">dnac::RawCoordinateSystem</innerclass>
    <innerclass refid="structdnac_1_1RawDefinition" prot="public">dnac::RawDefinition</innerclass>
    <innerclass refid="structdnac_1_1RawDescriptor" prot="public">dnac::RawDescriptor</innerclass>
    <innerclass refid="structdnac_1_1RawFace" prot="public">dnac::RawFace</innerclass>
    <innerclass refid="structdnac_1_1RawGeometry" prot="public">dnac::RawGeometry</innerclass>
    <innerclass refid="structdnac_1_1RawJointGroup" prot="public">dnac::RawJointGroup</innerclass>
    <innerclass refid="structdnac_1_1RawJoints" prot="public">dnac::RawJoints</innerclass>
    <innerclass refid="structdnac_1_1RawLODMapping" prot="public">dnac::RawLODMapping</innerclass>
    <innerclass refid="structdnac_1_1RawMesh" prot="public">dnac::RawMesh</innerclass>
    <innerclass refid="structdnac_1_1RawPSDMatrix" prot="public">dnac::RawPSDMatrix</innerclass>
    <innerclass refid="structdnac_1_1RawSurjectiveMapping" prot="public">dnac::RawSurjectiveMapping</innerclass>
    <innerclass refid="structdnac_1_1RawTextureCoordinateVector" prot="public">dnac::RawTextureCoordinateVector</innerclass>
    <innerclass refid="structdnac_1_1RawVector3Vector" prot="public">dnac::RawVector3Vector</innerclass>
    <innerclass refid="structdnac_1_1RawVertexLayoutVector" prot="public">dnac::RawVertexLayoutVector</innerclass>
    <innerclass refid="structdnac_1_1RawVertexSkinWeights" prot="public">dnac::RawVertexSkinWeights</innerclass>
    <innerclass refid="classdnac_1_1ReaderImpl" prot="public">dnac::ReaderImpl</innerclass>
    <innerclass refid="classdnac_1_1RemoveAnimatedMapCommand" prot="public">dnac::RemoveAnimatedMapCommand</innerclass>
    <innerclass refid="classdnac_1_1RemoveBlendShapeCommand" prot="public">dnac::RemoveBlendShapeCommand</innerclass>
    <innerclass refid="classdnac_1_1RemoveJointAnimationCommand" prot="public">dnac::RemoveJointAnimationCommand</innerclass>
    <innerclass refid="classdnac_1_1RemoveJointCommand" prot="public">dnac::RemoveJointCommand</innerclass>
    <innerclass refid="classdnac_1_1RemoveMeshCommand" prot="public">dnac::RemoveMeshCommand</innerclass>
    <innerclass refid="classdnac_1_1RenameAnimatedMapCommand" prot="public">dnac::RenameAnimatedMapCommand</innerclass>
    <innerclass refid="classdnac_1_1RenameBlendShapeCommand" prot="public">dnac::RenameBlendShapeCommand</innerclass>
    <innerclass refid="classdnac_1_1RenameJointCommand" prot="public">dnac::RenameJointCommand</innerclass>
    <innerclass refid="classdnac_1_1RenameMeshCommand" prot="public">dnac::RenameMeshCommand</innerclass>
    <innerclass refid="classdnac_1_1RenameResourceCommand" prot="public">dnac::RenameResourceCommand</innerclass>
    <innerclass refid="classdnac_1_1RotateCommand" prot="public">dnac::RotateCommand</innerclass>
    <innerclass refid="classdnac_1_1ScaleCommand" prot="public">dnac::ScaleCommand</innerclass>
    <innerclass refid="structdnac_1_1SectionLookupTable" prot="public">dnac::SectionLookupTable</innerclass>
    <innerclass refid="classdnac_1_1SetBlendShapeTargetDeltasCommand" prot="public">dnac::SetBlendShapeTargetDeltasCommand</innerclass>
    <innerclass refid="classdnac_1_1SetLODsCommand" prot="public">dnac::SetLODsCommand</innerclass>
    <innerclass refid="classdnac_1_1SetNeutralJointRotationsCommand" prot="public">dnac::SetNeutralJointRotationsCommand</innerclass>
    <innerclass refid="classdnac_1_1SetNeutralJointTranslationsCommand" prot="public">dnac::SetNeutralJointTranslationsCommand</innerclass>
    <innerclass refid="classdnac_1_1SetSkinWeightsCommand" prot="public">dnac::SetSkinWeightsCommand</innerclass>
    <innerclass refid="classdnac_1_1SetVertexPositionsCommand" prot="public">dnac::SetVertexPositionsCommand</innerclass>
    <innerclass refid="structdnac_1_1Signature" prot="public">dnac::Signature</innerclass>
    <innerclass refid="structdnac_1_1SurjectiveMapping" prot="public">dnac::SurjectiveMapping</innerclass>
    <innerclass refid="classdnac_1_1TranslateCommand" prot="public">dnac::TranslateCommand</innerclass>
    <innerclass refid="classdnac_1_1Triangle" prot="public">dnac::Triangle</innerclass>
    <innerclass refid="classdnac_1_1UVBarycentricMapping" prot="public">dnac::UVBarycentricMapping</innerclass>
    <innerclass refid="structdnac_1_1Version" prot="public">dnac::Version</innerclass>
    <innerclass refid="structdnac_1_1VersionInfo" prot="public">dnac::VersionInfo</innerclass>
    <innerclass refid="structdnac_1_1WeightGetterFactory" prot="public">dnac::WeightGetterFactory</innerclass>
    <innerclass refid="classdnac_1_1WriterImpl" prot="public">dnac::WriterImpl</innerclass>
    <innernamespace refid="namespacednac_1_1anonymous__namespace_02VersionInfo_8cpp_03">dnac::anonymous_namespace{VersionInfo.cpp}</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacednac_1a0839ffb81a5969050a4b31009a3ad18f" prot="public" static="no" strong="yes">
        <type></type>
        <name>VectorOperation</name>
        <qualifiedname>dnac::VectorOperation</qualifiedname>
        <enumvalue id="namespacednac_1a0839ffb81a5969050a4b31009a3ad18fad53238014015da17926bca398282211f" prot="public">
          <name>Interpolate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacednac_1a0839ffb81a5969050a4b31009a3ad18faec211f7c20af43e742bf2570c3cb84f9" prot="public">
          <name>Add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacednac_1a0839ffb81a5969050a4b31009a3ad18fa1d9baf077ee87921f57a8fe42d510b65" prot="public">
          <name>Subtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacednac_1a0839ffb81a5969050a4b31009a3ad18fae257376d913f3b53cbb4a9b19d770648" prot="public">
          <name>Multiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/commands/VectorOperations.h" line="7" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/commands/VectorOperations.h" bodystart="7" bodyend="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacednac_1a5148d42e4beb52913b9bc82dde4ff20d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacedna_1aaf7061d6093b1661cecf08df9f4be7fc" kindref="member">dna::ArrayView</ref>&lt; T &gt;</type>
        <definition>using dnac::ArrayView = typedef dna::ArrayView&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>ArrayView</name>
        <qualifiedname>dnac::ArrayView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/types/Aliases.h" line="44" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/types/Aliases.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacednac_1ac2e07be60cd7438652d21feb096edce4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacedna_1a2d8779c1a78015209a7249b86804dba6" kindref="member">dna::ConstArrayView</ref>&lt; T &gt;</type>
        <definition>using dnac::ConstArrayView = typedef dna::ConstArrayView&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>ConstArrayView</name>
        <qualifiedname>dnac::ConstArrayView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/types/Aliases.h" line="47" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/types/Aliases.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacednac_1a92531852da1cc0df2814156018d4d616" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>&lt; T, 64ul, <ref refid="classpma_1_1AlignedMemoryResource" kindref="compound">AlignedMemoryResource</ref> &gt;</type>
        <definition>using dnac::AlignedAllocator = typedef PolyAllocator&lt;T, 64ul, AlignedMemoryResource&gt;</definition>
        <argsstring></argsstring>
        <name>AlignedAllocator</name>
        <qualifiedname>dnac::AlignedAllocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/TypeDefs.h" line="22" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/TypeDefs.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacednac_1ab7887c11e5cb2fe15854f4c432134342" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classterse_1_1DynArray" kindref="compound">terse::DynArray</ref>&lt; T, <ref refid="classpma_1_1PolyAllocator" kindref="compound">PolyAllocator</ref>&lt; T &gt; &gt;</type>
        <definition>using dnac::DynArray = typedef terse::DynArray&lt;T, PolyAllocator&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>DynArray</name>
        <qualifiedname>dnac::DynArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/TypeDefs.h" line="25" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/TypeDefs.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacednac_1a5200fdf050bbe081932239f805cb2369" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classterse_1_1DynArray" kindref="compound">terse::DynArray</ref>&lt; T, <ref refid="namespacednac_1a92531852da1cc0df2814156018d4d616" kindref="member">AlignedAllocator</ref>&lt; T &gt; &gt;</type>
        <definition>using dnac::AlignedDynArray = typedef terse::DynArray&lt;T, AlignedAllocator&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>AlignedDynArray</name>
        <qualifiedname>dnac::AlignedDynArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/TypeDefs.h" line="28" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/TypeDefs.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacednac_1aa44501c4141be5abbb3ef7633abc06e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TCommand</type>
          </param>
          <param>
            <type>class TCondition</type>
          </param>
        </templateparamlist>
        <type><ref refid="classdnac_1_1ConditionalCommand" kindref="compound">ConditionalCommand</ref>&lt; TCommand, TCondition &gt;</type>
        <definition>ConditionalCommand&lt; TCommand, TCondition &gt; dnac::makeConditional</definition>
        <argsstring>(TCommand *command, TCondition condition)</argsstring>
        <name>makeConditional</name>
        <qualifiedname>dnac::makeConditional</qualifiedname>
        <param>
          <type>TCommand *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>TCondition</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/commands/ConditionalCommand.h" line="70" column="20" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/commands/ConditionalCommand.h" bodystart="70" bodyend="72"/>
        <referencedby refid="examples_2CommandSequence_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="examples_2CommandSequence_8cpp" startline="10" endline="65">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a00e9116a5d1ebd6f8353079449f53960" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dnac::remap</definition>
        <argsstring>(T originalCount, const UnorderedSet&lt; T &gt; &amp;keptIndices, UnorderedMap&lt; T, T &gt; &amp;mapping)</argsstring>
        <name>remap</name>
        <qualifiedname>dnac::remap</qualifiedname>
        <param>
          <type>T</type>
          <declname>originalCount</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepma_1aa4a7d53c17b0073cbf7c83622dffcfd1" kindref="member">UnorderedSet</ref>&lt; T &gt; &amp;</type>
          <declname>keptIndices</declname>
        </param>
        <param>
          <type><ref refid="namespacepma_1ada0fd0f9404c2e6f4bfcf09e36428621" kindref="member">UnorderedMap</ref>&lt; T, T &gt; &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/dna/filters/Remap.h" line="11" column="13" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/dna/filters/Remap.h" bodystart="11" bodyend="18"/>
        <references refid="namespaceextd_1a002ec342c016b4bc7cb2a886e13638c2" compoundref="utils_2Extd_8h" startline="40" endline="42">extd::contains</references>
        <referencedby refid="classdnac_1_1AnimatedMapFilter_1a1a864737f1891ff46c168dbb3bd46bdf" compoundref="alib_2dna_2filters_2AnimatedMapFilter_8cpp" startline="18" endline="24">dnac::AnimatedMapFilter::configure</referencedby>
        <referencedby refid="classdnac_1_1BlendShapeFilter_1a48d27cfef5428eb34004c3d7ea715231" compoundref="alib_2dna_2filters_2BlendShapeFilter_8cpp" startline="19" endline="25">dnac::BlendShapeFilter::configure</referencedby>
        <referencedby refid="classdnac_1_1JointFilter_1a37a69a26d49ff40722687deb79f7fc09" compoundref="alib_2dna_2filters_2JointFilter_8cpp" startline="20" endline="25">dnac::JointFilter::configure</referencedby>
        <referencedby refid="classdnac_1_1MeshFilter_1a848ad4acad818ce789c93a9f47f8fd81" compoundref="alib_2dna_2filters_2MeshFilter_8cpp" startline="18" endline="22">dnac::MeshFilter::configure</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a44837c77320a781ff936ae064a5f9d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TContainer</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dnac::ensureHasSize</definition>
        <argsstring>(TContainer &amp;target, std::size_t size, Args &amp;&amp;... args)</argsstring>
        <name>ensureHasSize</name>
        <qualifiedname>dnac::ensureHasSize</qualifiedname>
        <param>
          <type>TContainer &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/dna/WriterImpl.h" line="24" column="6" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/dna/WriterImpl.h" bodystart="24" bodyend="31"/>
        <referencedby refid="classdnac_1_1WriterImpl_1a8ae140ca9607a92fd6f901d52b31c048" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="359" endline="362">dnac::WriterImpl&lt; TWriterBase &gt;::setAnimatedMapName</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a9538041e4a629690825df4fed61d5cfe" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="724" endline="730">dnac::WriterImpl&lt; TWriterBase &gt;::setBlendShapeChannelIndex</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a055c94318db04a05e436fc3b1bed871c" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="325" endline="328">dnac::WriterImpl&lt; TWriterBase &gt;::setBlendShapeChannelName</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a21bf67f7b4b3df6b2317df963049a0e7" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="733" endline="740">dnac::WriterImpl&lt; TWriterBase &gt;::setBlendShapeTargetDeltas</referencedby>
        <referencedby refid="classdnac_1_1DNACalibDNAReaderImpl_1a393ec70bc0afd0516cc3afac007db03c" compoundref="DNACalibDNAReaderImpl_8cpp" startline="111" endline="121">dnac::DNACalibDNAReaderImpl::setBlendShapeTargetDeltas</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a32ea3212c92240cfee7ddd695dc5d847" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="743" endline="751">dnac::WriterImpl&lt; TWriterBase &gt;::setBlendShapeTargetVertexIndices</referencedby>
        <referencedby refid="classdnac_1_1DNACalibDNAReaderImpl_1a51d5d69dd682b2dfa2ee37c61109a442" compoundref="DNACalibDNAReaderImpl_8cpp" startline="131" endline="138">dnac::DNACalibDNAReaderImpl::setBlendShapeTargetVertexIndices</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1aacfc37da5cd768107eac0c20702f9f83" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="671" endline="679">dnac::WriterImpl&lt; TWriterBase &gt;::setFaceVertexLayoutIndices</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a2c629dec652bc6858cd63fb7d3ea31c2" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="265" endline="268">dnac::WriterImpl&lt; TWriterBase &gt;::setGUIControlName</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a25f57093350190d00c76f0bc4de3106c" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="524" endline="530">dnac::WriterImpl&lt; TWriterBase &gt;::setJointGroupInputIndices</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1ad792d87c667532b8d33c244b0fc5c8ec" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="550" endline="556">dnac::WriterImpl&lt; TWriterBase &gt;::setJointGroupJointIndices</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a16dcb872282fade83002ba9a41c30b13" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="515" endline="521">dnac::WriterImpl&lt; TWriterBase &gt;::setJointGroupLODs</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1afe41cdd7f4cbfccc353bff1f61fb56a6" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="533" endline="539">dnac::WriterImpl&lt; TWriterBase &gt;::setJointGroupOutputIndices</referencedby>
        <referencedby refid="classdnac_1_1DNACalibDNAReaderImpl_1ada98afe3be0c8dddabb0210872bbd775" compoundref="DNACalibDNAReaderImpl_8cpp" startline="91" endline="94">dnac::DNACalibDNAReaderImpl::setJointGroupValues</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a78bd0ab6be87569c02700a3183eb54c5" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="542" endline="547">dnac::WriterImpl&lt; TWriterBase &gt;::setJointGroupValues</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a44aae8205ce754f800f42e204e31fe42" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="287" endline="290">dnac::WriterImpl&lt; TWriterBase &gt;::setJointName</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a8df1d1c43bf4684b1fae38fbb900191f" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="682" endline="685">dnac::WriterImpl&lt; TWriterBase &gt;::setMaximumInfluencePerVertex</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a2a9867b0d14d8982a5bcbc7af36d6f3c" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="393" endline="396">dnac::WriterImpl&lt; TWriterBase &gt;::setMeshName</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a8087c7e36578e94332f70bbf2b3be3bf" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="276" endline="279">dnac::WriterImpl&lt; TWriterBase &gt;::setRawControlName</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a9ce7eefea09e84b4525412d22215389d" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="706" endline="714">dnac::WriterImpl&lt; TWriterBase &gt;::setSkinWeightsJointIndices</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a74a3311fd38284985c82379268d58e84" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="695" endline="703">dnac::WriterImpl&lt; TWriterBase &gt;::setSkinWeightsValues</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1aa8bc2b41324945dfba4c2d6085278719" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="649" endline="661">dnac::WriterImpl&lt; TWriterBase &gt;::setVertexLayouts</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1ac094e61813d68f323d6cd4a370dffd98" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="643" endline="646">dnac::WriterImpl&lt; TWriterBase &gt;::setVertexNormals</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1aea4244a70f74ffb03ab182362671de79" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="622" endline="625">dnac::WriterImpl&lt; TWriterBase &gt;::setVertexPositions</referencedby>
        <referencedby refid="classdnac_1_1DNACalibDNAReaderImpl_1a1af1f53aee10fbe9ed22453ce0455fa4" compoundref="DNACalibDNAReaderImpl_8cpp" startline="96" endline="104">dnac::DNACalibDNAReaderImpl::setVertexPositions</referencedby>
        <referencedby refid="classdnac_1_1WriterImpl_1a37c9be36d7240bc6caa85eab57d674e7" compoundref="dnacalib_2dna_2WriterImpl_8h" startline="628" endline="640">dnac::WriterImpl&lt; TWriterBase &gt;::setVertexTextureCoordinates</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1ab94cda9f731df40ec35b258c528e1ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref></type>
        <definition>fmat4 dnac::getTransformationMatrix</definition>
        <argsstring>(const fvec3 &amp;translation, const fvec3 &amp;rotation, const fvec3 &amp;scale={1.0f, 1.0f, 1.0f})</argsstring>
        <name>getTransformationMatrix</name>
        <qualifiedname>dnac::getTransformationMatrix</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1aa01d9c92918f0f78c73c3a9494be09f8" kindref="member">fvec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetdm_1aa01d9c92918f0f78c73c3a9494be09f8" kindref="member">fvec3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetdm_1aa01d9c92918f0f78c73c3a9494be09f8" kindref="member">fvec3</ref> &amp;</type>
          <declname>scale</declname>
          <defval>{1.0f, 1.0f, 1.0f}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" line="9" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1adc964674d792834010e5809c7599b824" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref></type>
        <definition>fmat4 dnac::extractTranslationMatrix</definition>
        <argsstring>(const fmat4 &amp;transformationMatrix)</argsstring>
        <name>extractTranslationMatrix</name>
        <qualifiedname>dnac::extractTranslationMatrix</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref> &amp;</type>
          <declname>transformationMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" line="13" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" bodystart="13" bodyend="19"/>
        <references refid="structtdm_1_1mat_1a11da46b865ad6c5876d68bcb3ec46724" compoundref="Mat_8h" startline="113" endline="115">tdm::mat&lt; R, C, T &gt;::identity</references>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a17ef2dcf60c1c087d0b83b430dfc3add" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetdm_1aa01d9c92918f0f78c73c3a9494be09f8" kindref="member">fvec3</ref></type>
        <definition>fvec3 dnac::extractScaleVector</definition>
        <argsstring>(const fmat4 &amp;transformationMatrix)</argsstring>
        <name>extractScaleVector</name>
        <qualifiedname>dnac::extractScaleVector</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref> &amp;</type>
          <declname>transformationMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" line="21" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" bodystart="21" bodyend="27"/>
        <referencedby refid="namespacednac_1a30f0682d879e5cbc632ab6663cdde53e" compoundref="Algorithm_8h" startline="29" endline="37">extractRotationMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a30f0682d879e5cbc632ab6663cdde53e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref></type>
        <definition>fmat4 dnac::extractRotationMatrix</definition>
        <argsstring>(const fmat4 &amp;transformationMatrix)</argsstring>
        <name>extractRotationMatrix</name>
        <qualifiedname>dnac::extractRotationMatrix</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref> &amp;</type>
          <declname>transformationMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" line="29" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" bodystart="29" bodyend="37"/>
        <references refid="namespacednac_1a17ef2dcf60c1c087d0b83b430dfc3add" compoundref="Algorithm_8h" startline="21" endline="27">extractScaleVector</references>
        <references refid="namespacetdm_1af6249949ec4da22bf7b907f2751efcaa" compoundref="Computations_8h" startline="134" endline="148">tdm::inverse</references>
        <references refid="namespacetdm_1_1affine_1afd9ea184660c9658cc406603d0a47629" compoundref="Transforms_8h" startline="29" endline="31">tdm::affine::scale</references>
        <referencedby refid="namespacednac_1aab3c105f2454303b836c591d0e676051" compoundref="Algorithm_8h" startline="43" endline="63">extractRotationVector</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a886581767877508fd8845b042fffaf5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetdm_1aa01d9c92918f0f78c73c3a9494be09f8" kindref="member">fvec3</ref></type>
        <definition>fvec3 dnac::extractTranslationVector</definition>
        <argsstring>(const fmat4 &amp;transformationMatrix)</argsstring>
        <name>extractTranslationVector</name>
        <qualifiedname>dnac::extractTranslationVector</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref> &amp;</type>
          <declname>transformationMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" line="39" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" bodystart="39" bodyend="41"/>
        <referencedby refid="classdnac_1_1RotateCommand_1_1Impl_1a4105b0c18c2d581429f6327246cc44fb" compoundref="RotateCommand_8cpp" startline="50" endline="75">dnac::RotateCommand::Impl::rotateNeutralJoints</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1aab3c105f2454303b836c591d0e676051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetdm_1aa01d9c92918f0f78c73c3a9494be09f8" kindref="member">fvec3</ref></type>
        <definition>fvec3 dnac::extractRotationVector</definition>
        <argsstring>(const fmat4 &amp;transformationMatrix)</argsstring>
        <name>extractRotationVector</name>
        <qualifiedname>dnac::extractRotationVector</qualifiedname>
        <param>
          <type>const <ref refid="namespacetdm_1a724304086392e7e3fc64dd35c1fbf3ea" kindref="member">fmat4</ref> &amp;</type>
          <declname>transformationMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" line="43" column="14" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/Algorithm.h" bodystart="43" bodyend="63"/>
        <references refid="namespacednac_1a30f0682d879e5cbc632ab6663cdde53e" compoundref="Algorithm_8h" startline="29" endline="37">extractRotationMatrix</references>
        <references refid="namespacetdm_1a42c57146e20cfe70131ff667f720bbad" compoundref="Transforms_8h" startline="10" endline="12">tdm::pi</references>
        <referencedby refid="classdnac_1_1RotateCommand_1_1Impl_1a4105b0c18c2d581429f6327246cc44fb" compoundref="RotateCommand_8cpp" startline="50" endline="75">dnac::RotateCommand::Impl::rotateNeutralJoints</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a28b74df1b84e529ca37742636b66cd8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespacepma_1ae5d060484bbf3a0aa543d80d3f3257fb" kindref="member">String</ref>&lt; char &gt;</type>
        <definition>String&lt; char &gt; dnac::formatString</definition>
        <argsstring>(MemoryResource *memRes, const char *format, Args &amp;&amp;... args)</argsstring>
        <name>formatString</name>
        <qualifiedname>dnac::formatString</qualifiedname>
        <param>
          <type><ref refid="classpma_1_1MemoryResource" kindref="compound">MemoryResource</ref> *</type>
          <declname>memRes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/FormatString.h" line="10" column="8" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/FormatString.h" bodystart="10" bodyend="26"/>
        <referencedby refid="classdnac_1_1SetBlendShapeTargetDeltasCommand_1_1Impl_1a9cd5c3a3a400e107a5280bed4cab5878" compoundref="SetBlendShapeTargetDeltasCommand_8cpp" startline="107" endline="181">dnac::SetBlendShapeTargetDeltasCommand::Impl::computeBlendShapeTargetDeltas</referencedby>
        <referencedby refid="classdnac_1_1SetVertexPositionsCommand_1_1Impl_1a883917daa2aca369cf98baf6b5b6e4d0" compoundref="SetVertexPositionsCommand_8cpp" startline="59" endline="82">dnac::SetVertexPositionsCommand::Impl::computeVertexPositions</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a0e46c4d3be1bf2a3d2a364e07175d321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator&amp;</definition>
        <argsstring>(TEnum lhs, TEnum rhs)</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>dnac::operator&amp;</qualifiedname>
        <param>
          <type>TEnum</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="11" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a3e2a14f36ad814c1071fe983950688a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator|</definition>
        <argsstring>(TEnum lhs, TEnum rhs)</argsstring>
        <name>operator|</name>
        <qualifiedname>dnac::operator|</qualifiedname>
        <param>
          <type>TEnum</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="18" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a94452cfca710e121b2bbc1918c61b88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator^</definition>
        <argsstring>(TEnum lhs, TEnum rhs)</argsstring>
        <name>operator^</name>
        <qualifiedname>dnac::operator^</qualifiedname>
        <param>
          <type>TEnum</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="25" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1aaaf75c7d56532c3b1bdcfc59f42155dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator~</definition>
        <argsstring>(TEnum value)</argsstring>
        <name>operator~</name>
        <qualifiedname>dnac::operator~</qualifiedname>
        <param>
          <type>TEnum</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="32" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a0e73deba860f4d4e7bd3ecae7a7ed70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator&amp;=</definition>
        <argsstring>(TEnum &amp;lhs, TEnum rhs)</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>dnac::operator&amp;=</qualifiedname>
        <param>
          <type>TEnum &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="39" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a935195168a7d4e86d9fdcc08715f9c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator|=</definition>
        <argsstring>(TEnum &amp;lhs, TEnum rhs)</argsstring>
        <name>operator|=</name>
        <qualifiedname>dnac::operator|=</qualifiedname>
        <param>
          <type>TEnum &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="45" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a1db9cc2a89b096fde759e2d44cfce42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, TEnum &gt;::type dnac::operator^=</definition>
        <argsstring>(TEnum &amp;lhs, TEnum rhs)</argsstring>
        <name>operator^=</name>
        <qualifiedname>dnac::operator^=</qualifiedname>
        <param>
          <type>TEnum &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="51" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacednac_1a3f8cbd424839e2e73030b1bd098b2f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TEnum</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, bool &gt;::type</type>
        <definition>std::enable_if&lt; std::is_enum&lt; TEnum &gt;::value, bool &gt;::type dnac::contains</definition>
        <argsstring>(TEnum lhs, TEnum rhs)</argsstring>
        <name>contains</name>
        <qualifiedname>dnac::contains</qualifiedname>
        <param>
          <type>TEnum</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TEnum</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" line="57" column="1" bodyfile="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/dnacalib/utils/ScopedEnumEx.h" bodystart="57" bodyend="59"/>
        <referencedby refid="classdnac_1_1UVBarycentricMapping_1a7a7379e253c15f9ec7ecf1ab4b659451" compoundref="UVBarycentricMapping_8cpp" startline="67" endline="82">dnac::UVBarycentricMapping::getBarycentric</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/include/dnacalib/Command.h" line="8" column="1"/>
  </compounddef>
</doxygen>
