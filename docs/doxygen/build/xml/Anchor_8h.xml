<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Anchor_8h" kind="file" language="C++">
    <compoundname>Anchor.h</compoundname>
    <includedby refid="ArchiveSize_8h" local="yes">ArchiveSize.h</includedby>
    <includedby refid="binary_2InputArchive_8h" local="yes">InputArchive.h</includedby>
    <includedby refid="json_2InputArchive_8h" local="yes">InputArchive.h</includedby>
    <includedby refid="binary_2OutputArchive_8h" local="yes">OutputArchive.h</includedby>
    <includedby refid="json_2OutputArchive_8h" local="yes">OutputArchive.h</includedby>
    <invincdepgraph>
      <node id="6">
        <label>BinaryStreamReaderImpl.cpp</label>
        <link refid="BinaryStreamReaderImpl_8cpp"/>
      </node>
      <node id="5">
        <label>BinaryStreamReaderImpl.h</label>
        <link refid="BinaryStreamReaderImpl_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>BinaryStreamWriterImpl.cpp</label>
        <link refid="BinaryStreamWriterImpl_8cpp"/>
      </node>
      <node id="12">
        <label>BinaryStreamWriterImpl.h</label>
        <link refid="BinaryStreamWriterImpl_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>FilteredInputArchive.cpp</label>
        <link refid="FilteredInputArchive_8cpp"/>
      </node>
      <node id="4">
        <label>FilteredInputArchive.h</label>
        <link refid="FilteredInputArchive_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>JSONStreamReaderImpl.cpp</label>
        <link refid="JSONStreamReaderImpl_8cpp"/>
      </node>
      <node id="9">
        <label>JSONStreamReaderImpl.h</label>
        <link refid="JSONStreamReaderImpl_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>JSONStreamWriterImpl.cpp</label>
        <link refid="JSONStreamWriterImpl_8cpp"/>
      </node>
      <node id="15">
        <label>JSONStreamWriterImpl.h</label>
        <link refid="JSONStreamWriterImpl_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>InputArchive.h</label>
        <link refid="binary_2InputArchive_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>OutputArchive.h</label>
        <link refid="binary_2OutputArchive_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>InputArchive.h</label>
        <link refid="json_2InputArchive_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>OutputArchive.h</label>
        <link refid="json_2OutputArchive_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Anchor.h</label>
        <link refid="Anchor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ArchiveSize.h</label>
        <link refid="ArchiveSize_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structterse_1_1Anchor" prot="public">terse::Anchor</innerclass>
    <innernamespace refid="namespaceterse">terse</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceterse" kindref="compound">terse</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Anchor<sp/>is<sp/>a<sp/>virtual,<sp/>utility<sp/>type<sp/>only<sp/>(meaning<sp/>it<sp/>does<sp/>not<sp/>write<sp/>or<sp/>read<sp/>any<sp/>data<sp/>from<sp/>the<sp/>stream)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>only<sp/>captures<sp/>the<sp/>current<sp/>position<sp/>in<sp/>the<sp/>stream<sp/>(into<sp/>an<sp/>in-memory<sp/>variable<sp/>only),<sp/>at<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>anchor<sp/>is<sp/>encountered<sp/>in<sp/>the<sp/>serialization<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>Anchor<sp/>can<sp/>be<sp/>associated<sp/>with<sp/>an<sp/>ArchiveSize<sp/>type,<sp/>and<sp/>ArchiveSize<sp/>will<sp/>use<sp/>it<sp/>as<sp/>the<sp/>base<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>which<sp/>to<sp/>calculate<sp/>its<sp/>own<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOffset&gt;</highlight></codeline>
<codeline lineno="13" refid="structterse_1_1Anchor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref><sp/>{</highlight></codeline>
<codeline lineno="14" refid="structterse_1_1Anchor_1af887f019df187753ed24f696ba7c3a05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structterse_1_1Anchor_1af887f019df187753ed24f696ba7c3a05" kindref="member">ValueType</ref><sp/>=<sp/>TOffset;</highlight></codeline>
<codeline lineno="15" refid="structterse_1_1Anchor_1a27ce02a9b193a4219f2b3b3455fe73ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structterse_1_1Anchor_1a27ce02a9b193a4219f2b3b3455fe73ba" kindref="member">OnMoveCallback</ref><sp/>=<sp/>void<sp/>(*)(<ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structterse_1_1Anchor_1ab122fd961a772f08358885f58aea7b2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1Anchor_1af887f019df187753ed24f696ba7c3a05" kindref="member">ValueType</ref><sp/><ref refid="structterse_1_1Anchor_1ab122fd961a772f08358885f58aea7b2c" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1a27ce02a9b193a4219f2b3b3455fe73ba" kindref="member">OnMoveCallback</ref><sp/><ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>;</highlight></codeline>
<codeline lineno="20" refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structterse_1_1Anchor_1a7048e56f267f82713de298fc936a6c27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1a7048e56f267f82713de298fc936a6c27" kindref="member">Anchor</ref>()<sp/>:<sp/><ref refid="structterse_1_1Anchor_1ab122fd961a772f08358885f58aea7b2c" kindref="member">value</ref>{},<sp/><ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>{nullptr},<sp/><ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>{nullptr}<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structterse_1_1Anchor_1ab774fd4a2dd2181b0cc0ee85ee432334" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1ab774fd4a2dd2181b0cc0ee85ee432334" kindref="member">~Anchor</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structterse_1_1Anchor_1a1bdd9a3a9a551e0656e320c78439460e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1a1bdd9a3a9a551e0656e320c78439460e" kindref="member">Anchor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28" refid="structterse_1_1Anchor_1af793e57a7e3a7b5be97ee12df347f0ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>&amp;<sp/><ref refid="structterse_1_1Anchor_1af793e57a7e3a7b5be97ee12df347f0ab" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structterse_1_1Anchor_1ab23b185bbccc7c7ffa7356b6a4451932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1ab23b185bbccc7c7ffa7356b6a4451932" kindref="member">Anchor</ref>(<ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>&amp;&amp;<sp/>rhs)<sp/>:<sp/><ref refid="structterse_1_1Anchor_1ab122fd961a772f08358885f58aea7b2c" kindref="member">value</ref>{},<sp/><ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>{nullptr},<sp/><ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>{nullptr}<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="structterse_1_1Anchor_1ab122fd961a772f08358885f58aea7b2c" kindref="member">value</ref>,<sp/>rhs.value);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>,<sp/>rhs.onMoveCallback);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>,<sp/>rhs.onMoveCallbackData);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structterse_1_1Anchor_1aedf299be7ee27d58f951e445940fd82e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>&amp;<sp/><ref refid="structterse_1_1Anchor_1aedf299be7ee27d58f951e445940fd82e" kindref="member">operator=</ref>(<ref refid="structterse_1_1Anchor" kindref="compound">Anchor</ref>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="structterse_1_1Anchor_1ab122fd961a772f08358885f58aea7b2c" kindref="member">value</ref>,<sp/>rhs.value);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>,<sp/>rhs.onMoveCallback);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>,<sp/>rhs.onMoveCallbackData);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structterse_1_1Anchor_1a0605a94fa2dd9703fd0c9777df72787a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structterse_1_1Anchor_1a0605a94fa2dd9703fd0c9777df72787a" kindref="member">onMove</ref>(<ref refid="structterse_1_1Anchor_1a27ce02a9b193a4219f2b3b3455fe73ba" kindref="member">OnMoveCallback</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1aee0254cd59e49a9644c31d93f745a943" kindref="member">onMoveCallback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structterse_1_1Anchor_1aaa4f9ab37ef885b0d27ee43f74eae8d1" kindref="member">onMoveCallbackData</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>terse</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/types/Anchor.h"/>
  </compounddef>
</doxygen>
