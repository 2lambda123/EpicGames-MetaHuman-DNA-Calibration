<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Blob_8h" kind="file" language="C++">
    <compoundname>Blob.h</compoundname>
    <includes refid="DynArray_8h" local="yes">terse/types/DynArray.h</includes>
    <includedby refid="binary_2InputArchive_8h" local="yes">InputArchive.h</includedby>
    <includedby refid="json_2InputArchive_8h" local="yes">InputArchive.h</includedby>
    <includedby refid="binary_2OutputArchive_8h" local="yes">OutputArchive.h</includedby>
    <includedby refid="json_2OutputArchive_8h" local="yes">OutputArchive.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Blob.h</label>
        <link refid="Blob_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>terse/types/DynArray.h</label>
        <link refid="DynArray_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="8">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>BinaryStreamReaderImpl.cpp</label>
        <link refid="BinaryStreamReaderImpl_8cpp"/>
      </node>
      <node id="4">
        <label>BinaryStreamReaderImpl.h</label>
        <link refid="BinaryStreamReaderImpl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>BinaryStreamWriterImpl.cpp</label>
        <link refid="BinaryStreamWriterImpl_8cpp"/>
      </node>
      <node id="11">
        <label>BinaryStreamWriterImpl.h</label>
        <link refid="BinaryStreamWriterImpl_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>FilteredInputArchive.cpp</label>
        <link refid="FilteredInputArchive_8cpp"/>
      </node>
      <node id="3">
        <label>FilteredInputArchive.h</label>
        <link refid="FilteredInputArchive_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>JSONStreamReaderImpl.cpp</label>
        <link refid="JSONStreamReaderImpl_8cpp"/>
      </node>
      <node id="8">
        <label>JSONStreamReaderImpl.h</label>
        <link refid="JSONStreamReaderImpl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>JSONStreamWriterImpl.cpp</label>
        <link refid="JSONStreamWriterImpl_8cpp"/>
      </node>
      <node id="14">
        <label>JSONStreamWriterImpl.h</label>
        <link refid="JSONStreamWriterImpl_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>InputArchive.h</label>
        <link refid="binary_2InputArchive_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>OutputArchive.h</label>
        <link refid="binary_2OutputArchive_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>InputArchive.h</label>
        <link refid="json_2InputArchive_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>OutputArchive.h</label>
        <link refid="json_2OutputArchive_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Blob.h</label>
        <link refid="Blob_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classterse_1_1Blob" prot="public">terse::Blob</innerclass>
    <innernamespace refid="namespaceterse">terse</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Epic<sp/>Games,<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DynArray_8h" kindref="compound">terse/types/DynArray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceterse" kindref="compound">terse</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Blob<sp/>is<sp/>a<sp/>wrapper<sp/>type<sp/>around<sp/>a<sp/>byte-array<sp/>essentially,<sp/>and<sp/>is<sp/>used<sp/>to<sp/>serialize<sp/>binary<sp/>blobs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>whose<sp/>size<sp/>is<sp/>predefined<sp/>by<sp/>another<sp/>entity<sp/>(e.g.<sp/>an<sp/>ArchiveSize<sp/>object).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>During<sp/>serialization,<sp/>the<sp/>amount<sp/>of<sp/>bytes<sp/>either<sp/>written<sp/>to<sp/>or<sp/>read<sp/>from<sp/>the<sp/>stream<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>controlled<sp/>by<sp/>the<sp/>user<sp/>(by<sp/>setting<sp/>the<sp/>size<sp/>on<sp/>the<sp/>blob<sp/>type<sp/>through<sp/>the<sp/>setSize<sp/>member<sp/>function).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>text-based<sp/>serializers,<sp/>binary<sp/>blobs<sp/>are<sp/>Base64<sp/>encoded/decoded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TAllocator&gt;</highlight></codeline>
<codeline lineno="15" refid="classterse_1_1Blob" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classterse_1_1Blob" kindref="compound">Blob</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Blob<sp/>supports<sp/>only<sp/>native<sp/>byte-sized<sp/>types.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classterse_1_1Blob_1a1c7851bb9075f32cfc671451d2b57680" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classterse_1_1Blob_1a1c7851bb9075f32cfc671451d2b57680" kindref="member">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="20" refid="classterse_1_1Blob_1a97472f22b87e5aaa22cea8d52d54837e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classterse_1_1Blob_1a97472f22b87e5aaa22cea8d52d54837e" kindref="member">allocator_type</ref><sp/>=<sp/>TAllocator;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="classterse_1_1Blob_1a9c40101c0c22c612e63abd63e09d285c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classterse_1_1Blob_1a9c40101c0c22c612e63abd63e09d285c" kindref="member">Blob</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classterse_1_1Blob_1a1dfb2e4660785470cf7d11976988d6c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a1dfb2e4660785470cf7d11976988d6c0" kindref="member">Blob</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a97472f22b87e5aaa22cea8d52d54837e" kindref="member">allocator_type</ref>&amp;<sp/>alloc)<sp/>:<sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>{alloc}<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classterse_1_1Blob_1a0aa00fd986e66574267b58f277a89db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classterse_1_1Blob_1a0aa00fd986e66574267b58f277a89db8" kindref="member">Blob</ref>(std::size_t<sp/><ref refid="classterse_1_1Blob_1a7cf202e916939e6b9c12a6adc76af444" kindref="member">size</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a97472f22b87e5aaa22cea8d52d54837e" kindref="member">allocator_type</ref>&amp;<sp/>alloc)<sp/>:<sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>{<ref refid="classterse_1_1Blob_1a7cf202e916939e6b9c12a6adc76af444" kindref="member">size</ref>,<sp/>alloc}<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classterse_1_1Blob_1a9d143779c4cf73254ea6845c9d3ee4cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classterse_1_1Blob_1a97472f22b87e5aaa22cea8d52d54837e" kindref="member">allocator_type</ref><sp/><ref refid="classterse_1_1Blob_1a9d143779c4cf73254ea6845c9d3ee4cf" kindref="member">get_allocator</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>.<ref refid="classterse_1_1DynArray_1a360fe05901de9088ce4737b067803e33" kindref="member">get_allocator</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classterse_1_1Blob_1ac0650cbe35b02e1d3541951ffe6eb082" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classterse_1_1Blob_1a1c7851bb9075f32cfc671451d2b57680" kindref="member">value_type</ref>*<sp/><ref refid="classterse_1_1Blob_1ac0650cbe35b02e1d3541951ffe6eb082" kindref="member">data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>.<ref refid="classterse_1_1DynArray_1a43a53bd4d3addb0d80e99c1f776764f2" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classterse_1_1Blob_1aa4e417bfb0c0a889b87f8b1ea7d581a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a1c7851bb9075f32cfc671451d2b57680" kindref="member">value_type</ref>*<sp/><ref refid="classterse_1_1Blob_1aa4e417bfb0c0a889b87f8b1ea7d581a3" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>.<ref refid="classterse_1_1DynArray_1a43a53bd4d3addb0d80e99c1f776764f2" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classterse_1_1Blob_1a7cf202e916939e6b9c12a6adc76af444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classterse_1_1Blob_1a7cf202e916939e6b9c12a6adc76af444" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>.<ref refid="classterse_1_1DynArray_1a2f317866912cd6764477e74115d83bdb" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classterse_1_1Blob_1a337f310c583f03319a8104aad0367d9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classterse_1_1Blob_1a337f310c583f03319a8104aad0367d9f" kindref="member">setSize</ref>(std::size_t<sp/>newSize)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>.<ref refid="classterse_1_1DynArray_1a059d13c5e37f77c801e81c9fb5ae1608" kindref="member">resize_uninitialized</ref>(newSize);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classterse_1_1DynArray" kindref="compound">DynArray&lt;value_type, allocator_type&gt;</ref><sp/><ref refid="classterse_1_1Blob_1a54a57ec49e721460b2723fa74ac7924f" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>terse</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/source/MetaHuman-DNA-Calibration_clean/dnacalib/DNACalib/src/terse/types/Blob.h"/>
  </compounddef>
</doxygen>
